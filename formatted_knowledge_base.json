{
  "t_esc_status": {
    "name": "esc_status",
    "description": "esc_online_flags bit 0 : Set to 1 if ESC0 is online\nesc_online_flags bit 1 : Set to 1 if ESC1 is online\nesc_online_flags bit 2 : Set to 1 if ESC2 is online\nesc_online_flags bit 3 : Set to 1 if ESC3 is online\nesc_online_flags bit 4 : Set to 1 if ESC4 is online\nesc_online_flags bit 5 : Set to 1 if ESC5 is online\nesc_online_flags bit 6 : Set to 1 if ESC6 is online\nesc_online_flags bit 7 : Set to 1 if ESC7 is online",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "counter": {
        "type": "uint16",
        "name": "counter",
        "description": "incremented by the writing thread everytime new data is stored",
        "units": null,
        "default_value": null
      },
      "esc_count": {
        "type": "uint8",
        "name": "esc_count",
        "description": "number of connected ESCs",
        "units": null,
        "default_value": null
      },
      "esc_connectiontype": {
        "type": "uint8",
        "name": "esc_connectiontype",
        "description": "how ESCs connected to the system",
        "units": null,
        "default_value": null
      },
      "esc_online_flags": {
        "type": "uint8",
        "name": "esc_online_flags",
        "description": "Bitmask indicating which ESC is online/offline",
        "units": null,
        "default_value": null
      },
      "esc_armed_flags": {
        "type": "uint8",
        "name": "esc_armed_flags",
        "description": "Bitmask indicating which ESC is armed. For ESC's where the arming state is not known , the arming bits should always be set.",
        "units": "returned by the ESC",
        "default_value": null
      },
      "esc": {
        "type": "EscReport[8]",
        "name": "esc",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_vertiq_io",
        "name": "vertiq_io",
        "type": "Module"
      },
      {
        "id": "m_voxl_esc",
        "name": "voxl_esc",
        "type": "Module"
      },
      {
        "id": "m_cyphal",
        "name": "cyphal",
        "type": "Module"
      },
      {
        "id": "m_dshot",
        "name": "dshot",
        "type": "Module"
      },
      {
        "id": "m_tap_esc",
        "name": "tap_esc",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_fake_imu",
        "name": "fake_imu",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_esc_battery",
        "name": "esc_battery",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_adc_report": {
    "name": "adc_report",
    "description": "Contains adc report data including device_id (unique device id for the sensor that does not change between power cycles), channel_id (adc channel ids, negative for non-existent, todo: should be kept same as array index), raw_data (adc channel raw value, accept negative value, valid if channel id is positive), and 1 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "channel_id": {
        "type": "int16[12]",
        "name": "channel_id",
        "description": "ADC channel IDs, negative for non-existent, TODO: should be kept same as array index",
        "units": null,
        "default_value": null
      },
      "raw_data": {
        "type": "int32[12]",
        "name": "raw_data",
        "description": "ADC channel raw value, accept negative value, valid if channel ID is positive",
        "units": null,
        "default_value": null
      },
      "resolution": {
        "type": "uint32",
        "name": "resolution",
        "description": "ADC channel resolution",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_ads1115",
        "name": "ads1115",
        "type": "Module"
      },
      {
        "id": "m_board_adc",
        "name": "board_adc",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_board_adc",
        "name": "board_adc",
        "type": "Module"
      },
      {
        "id": "m_rc_input",
        "name": "rc_input",
        "type": "Module"
      },
      {
        "id": "m_battery_status",
        "name": "battery_status",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_system_power": {
    "name": "system_power",
    "description": "Contains system power data including voltage5v_v (peripheral 5v rail voltage), voltage_payload_v (payload rail voltage), sensors3v3 (sensors 3v3 rail voltage), and 10 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "voltage5v_v": {
        "type": "float32",
        "name": "voltage5v_v",
        "description": "peripheral 5V rail voltage",
        "units": null,
        "default_value": null
      },
      "voltage_payload_v": {
        "type": "float32",
        "name": "voltage_payload_v",
        "description": "payload rail voltage",
        "units": null,
        "default_value": null
      },
      "sensors3v3": {
        "type": "float32[4]",
        "name": "sensors3v3",
        "description": "Sensors 3V3 rail voltage",
        "units": null,
        "default_value": null
      },
      "sensors3v3_valid": {
        "type": "uint8",
        "name": "sensors3v3_valid",
        "description": "Sensors 3V3 rail voltage was read .",
        "units": "bitfield",
        "default_value": null
      },
      "usb_connected": {
        "type": "uint8",
        "name": "usb_connected",
        "description": "USB is connected when 1",
        "units": null,
        "default_value": null
      },
      "brick_valid": {
        "type": "uint8",
        "name": "brick_valid",
        "description": "brick bits power is good when bit 1",
        "units": null,
        "default_value": null
      },
      "usb_valid": {
        "type": "uint8",
        "name": "usb_valid",
        "description": "USB is valid when 1",
        "units": null,
        "default_value": null
      },
      "servo_valid": {
        "type": "uint8",
        "name": "servo_valid",
        "description": "servo power is good when 1",
        "units": null,
        "default_value": null
      },
      "periph_5v_oc": {
        "type": "uint8",
        "name": "periph_5v_oc",
        "description": "peripheral overcurrent when 1",
        "units": null,
        "default_value": null
      },
      "hipower_5v_oc": {
        "type": "uint8",
        "name": "hipower_5v_oc",
        "description": "high power peripheral overcurrent when 1",
        "units": null,
        "default_value": null
      },
      "comp_5v_valid": {
        "type": "uint8",
        "name": "comp_5v_valid",
        "description": "5V to companion valid",
        "units": null,
        "default_value": null
      },
      "can1_gps1_5v_valid": {
        "type": "uint8",
        "name": "can1_gps1_5v_valid",
        "description": "5V for CAN1/GPS1 valid",
        "units": null,
        "default_value": null
      },
      "payload_v_valid": {
        "type": "uint8",
        "name": "payload_v_valid",
        "description": "payload rail voltage is valid",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_board_adc",
        "name": "board_adc",
        "type": "Module"
      },
      {
        "id": "m_system_power_simulator",
        "name": "system_power_simulator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_baro": {
    "name": "sensor_baro",
    "description": "Contains sensor baro data including device_id (unique device id for the sensor that does not change between power cycles), pressure (static pressure measurement in pascals), temperature (temperature in degrees celsius), and 1 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "",
        "units": null,
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "pressure": {
        "type": "float32",
        "name": "pressure",
        "description": "static pressure measurement in Pascals",
        "units": null,
        "default_value": null
      },
      "temperature": {
        "type": "float32",
        "name": "temperature",
        "description": "temperature in degrees Celsius",
        "units": null,
        "default_value": null
      },
      "error_count": {
        "type": "uint32",
        "name": "error_count",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_bmp280",
        "name": "bmp280",
        "type": "Module"
      },
      {
        "id": "m_bmp388",
        "name": "bmp388",
        "type": "Module"
      },
      {
        "id": "m_bmp581",
        "name": "bmp581",
        "type": "Module"
      },
      {
        "id": "m_dps310",
        "name": "dps310",
        "type": "Module"
      },
      {
        "id": "m_spa06",
        "name": "spa06",
        "type": "Module"
      },
      {
        "id": "m_spl06",
        "name": "spl06",
        "type": "Module"
      },
      {
        "id": "m_icp101xx",
        "name": "icp101xx",
        "type": "Module"
      },
      {
        "id": "m_icp201xx",
        "name": "icp201xx",
        "type": "Module"
      },
      {
        "id": "m_lps22hb",
        "name": "lps22hb",
        "type": "Module"
      },
      {
        "id": "m_lps25h",
        "name": "lps25h",
        "type": "Module"
      },
      {
        "id": "m_lps33hw",
        "name": "lps33hw",
        "type": "Module"
      },
      {
        "id": "m_mpc2520",
        "name": "mpc2520",
        "type": "Module"
      },
      {
        "id": "m_mpl3115a2",
        "name": "mpl3115a2",
        "type": "Module"
      },
      {
        "id": "m_ms5611",
        "name": "ms5611",
        "type": "Module"
      },
      {
        "id": "m_ms5837",
        "name": "ms5837",
        "type": "Module"
      },
      {
        "id": "m_tcbp001ta",
        "name": "tcbp001ta",
        "type": "Module"
      },
      {
        "id": "m_auav",
        "name": "auav",
        "type": "Module"
      },
      {
        "id": "m_adis16448",
        "name": "adis16448",
        "type": "Module"
      },
      {
        "id": "m_vectornav",
        "name": "vectornav",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_sensor_baro_sim",
        "name": "sensor_baro_sim",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_temperature_compensation",
        "name": "temperature_compensation",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_battery_status": {
    "name": "battery_status",
    "description": "Comprehensive battery status information including voltage, current, capacity, warnings and faults",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "connected": {
        "type": "bool",
        "name": "connected",
        "description": "Whether or not a battery is connected, based on a voltage threshold",
        "units": null
      },
      "voltage_v": {
        "type": "float32",
        "name": "voltage_v",
        "description": "Battery voltage in volts, 0 if unknown",
        "units": "V"
      },
      "current_a": {
        "type": "float32",
        "name": "current_a",
        "description": "Battery current in amperes, -1 if unknown",
        "units": "A"
      },
      "remaining": {
        "type": "float32",
        "name": "remaining",
        "description": "From 1 to 0, -1 if unknown",
        "units": null
      },
      "temperature": {
        "type": "float32",
        "name": "temperature",
        "description": "Temperature of the battery in degrees Celcius",
        "units": "degC"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_batt_smbus",
        "name": "batt_smbus",
        "type": "Module"
      },
      {
        "id": "m_cyphal",
        "name": "cyphal",
        "type": "Module"
      },
      {
        "id": "m_batmon",
        "name": "batmon",
        "type": "Module"
      },
      {
        "id": "m_tattu_can",
        "name": "tattu_can",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_atxxxx",
        "name": "atxxxx",
        "type": "Module"
      },
      {
        "id": "m_msp_osd",
        "name": "msp_osd",
        "type": "Module"
      },
      {
        "id": "m_crsf_rc",
        "name": "crsf_rc",
        "type": "Module"
      },
      {
        "id": "m_ghst_rc",
        "name": "ghst_rc",
        "type": "Module"
      },
      {
        "id": "m_rc_input",
        "name": "rc_input",
        "type": "Module"
      },
      {
        "id": "m_bst",
        "name": "bst",
        "type": "Module"
      },
      {
        "id": "m_frsky_telemetry",
        "name": "frsky_telemetry",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_send_event",
        "name": "send_event",
        "type": "Module"
      },
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_logger",
        "name": "logger",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_command_ack": {
    "name": "vehicle_command_ack",
    "description": "Contains command messages for vehicle actions.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "command": {
        "type": "uint16",
        "name": "command",
        "description": "Command ID",
        "units": null
      },
      "result": {
        "type": "uint8",
        "name": "result",
        "description": "Result of the command execution",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_camera_capture",
        "name": "camera_capture",
        "type": "Module"
      },
      {
        "id": "m_camera_trigger",
        "name": "camera_trigger",
        "type": "Module"
      },
      {
        "id": "m_dshot",
        "name": "dshot",
        "type": "Module"
      },
      {
        "id": "m_px4io",
        "name": "px4io",
        "type": "Module"
      },
      {
        "id": "m_dsm_rc",
        "name": "dsm_rc",
        "type": "Module"
      },
      {
        "id": "m_rc_input",
        "name": "rc_input",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_send_event",
        "name": "send_event",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_logger",
        "name": "logger",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      },
      {
        "id": "m_payload_deliverer",
        "name": "payload_deliverer",
        "type": "Module"
      },
      {
        "id": "m_battery_simulator",
        "name": "battery_simulator",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_temperature_compensation",
        "name": "temperature_compensation",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_uxrce_dds_client",
        "name": "uxrce_dds_client",
        "type": "Module"
      },
      {
        "id": "m_failure",
        "name": "failure",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_camera_trigger": {
    "name": "camera_trigger",
    "description": "Contains camera trigger data including timestamp_utc (utc timestamp), seq (image sequence number), feedback (trigger feedback from camera).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_utc": {
        "type": "uint64",
        "name": "timestamp_utc",
        "description": "UTC timestamp",
        "units": null,
        "default_value": null
      },
      "seq": {
        "type": "uint32",
        "name": "seq",
        "description": "Image sequence number",
        "units": null,
        "default_value": null
      },
      "feedback": {
        "type": "bool",
        "name": "feedback",
        "description": "Trigger feedback from camera",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_camera_capture",
        "name": "camera_capture",
        "type": "Module"
      },
      {
        "id": "m_camera_trigger",
        "name": "camera_trigger",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_camera_feedback",
        "name": "camera_feedback",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_command": {
    "name": "vehicle_command",
    "description": "Vehicle Command uORB message. Used for commanding a mission / action / etc. Follows the MAVLink COMMAND_INT / COMMAND_LONG definition",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "param1": {
        "type": "float32",
        "name": "param1",
        "description": "Parameter 1, as defined by MAVLink VEHICLE_CMD enum",
        "units": null
      },
      "param2": {
        "type": "float32",
        "name": "param2",
        "description": "Parameter 2, as defined by MAVLink VEHICLE_CMD enum",
        "units": null
      },
      "param3": {
        "type": "float32",
        "name": "param3",
        "description": "Parameter 3, as defined by MAVLink VEHICLE_CMD enum",
        "units": null
      },
      "param4": {
        "type": "float32",
        "name": "param4",
        "description": "Parameter 4, as defined by MAVLink VEHICLE_CMD enum",
        "units": null
      },
      "param5": {
        "type": "float64",
        "name": "param5",
        "description": "Parameter 5, as defined by MAVLink VEHICLE_CMD enum",
        "units": null
      },
      "param6": {
        "type": "float64",
        "name": "param6",
        "description": "Parameter 6, as defined by MAVLink VEHICLE_CMD enum",
        "units": null
      },
      "param7": {
        "type": "float32",
        "name": "param7",
        "description": "Parameter 7, as defined by MAVLink VEHICLE_CMD enum",
        "units": null
      },
      "command": {
        "type": "uint32",
        "name": "command",
        "description": "Command ID",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_camera_trigger",
        "name": "camera_trigger",
        "type": "Module"
      },
      {
        "id": "m_dsm_rc",
        "name": "dsm_rc",
        "type": "Module"
      },
      {
        "id": "m_rc_input",
        "name": "rc_input",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      },
      {
        "id": "m_payload_deliverer",
        "name": "payload_deliverer",
        "type": "Module"
      },
      {
        "id": "m_temperature_compensation",
        "name": "temperature_compensation",
        "type": "Module"
      },
      {
        "id": "m_uxrce_dds_client",
        "name": "uxrce_dds_client",
        "type": "Module"
      },
      {
        "id": "m_failure",
        "name": "failure",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_camera_capture",
        "name": "camera_capture",
        "type": "Module"
      },
      {
        "id": "m_camera_trigger",
        "name": "camera_trigger",
        "type": "Module"
      },
      {
        "id": "m_dshot",
        "name": "dshot",
        "type": "Module"
      },
      {
        "id": "m_px4io",
        "name": "px4io",
        "type": "Module"
      },
      {
        "id": "m_dsm_rc",
        "name": "dsm_rc",
        "type": "Module"
      },
      {
        "id": "m_rc_input",
        "name": "rc_input",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_send_event",
        "name": "send_event",
        "type": "Module"
      },
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_logger",
        "name": "logger",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      },
      {
        "id": "m_payload_deliverer",
        "name": "payload_deliverer",
        "type": "Module"
      },
      {
        "id": "m_battery_simulator",
        "name": "battery_simulator",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_temperature_compensation",
        "name": "temperature_compensation",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_differential_pressure": {
    "name": "differential_pressure",
    "description": "Contains differential pressure data including device_id (unique device id for the sensor that does not change between power cycles), differential_pressure_pa (differential pressure reading in pascals), temperature (temperature provided by sensor in degrees celsius, nan if unknown), and 1 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "",
        "units": null,
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "differential_pressure_pa": {
        "type": "float32",
        "name": "differential_pressure_pa",
        "description": "differential pressure reading in Pascals",
        "units": "may be negative",
        "default_value": null
      },
      "temperature": {
        "type": "float32",
        "name": "temperature",
        "description": "Temperature provided by sensor in degrees Celsius, NAN if unknown",
        "units": null,
        "default_value": null
      },
      "error_count": {
        "type": "uint32",
        "name": "error_count",
        "description": "Number of errors detected by driver",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_asp5033",
        "name": "asp5033",
        "type": "Module"
      },
      {
        "id": "m_auav",
        "name": "auav",
        "type": "Module"
      },
      {
        "id": "m_ets_airspeed",
        "name": "ets_airspeed",
        "type": "Module"
      },
      {
        "id": "m_ms4515",
        "name": "ms4515",
        "type": "Module"
      },
      {
        "id": "m_ms4525do",
        "name": "ms4525do",
        "type": "Module"
      },
      {
        "id": "m_ms5525dso",
        "name": "ms5525dso",
        "type": "Module"
      },
      {
        "id": "m_sdp3x",
        "name": "sdp3x",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_sensor_airspeed_sim",
        "name": "sensor_airspeed_sim",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_distance_sensor": {
    "name": "distance_sensor",
    "description": "DISTANCE_SENSOR message data",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "min_distance": {
        "type": "float32",
        "name": "min_distance",
        "description": "Minimum distance the sensor can measure",
        "units": "in m",
        "default_value": null
      },
      "max_distance": {
        "type": "float32",
        "name": "max_distance",
        "description": "Maximum distance the sensor can measure",
        "units": "in m",
        "default_value": null
      },
      "current_distance": {
        "type": "float32",
        "name": "current_distance",
        "description": "Current distance reading",
        "units": "in m",
        "default_value": null
      },
      "variance": {
        "type": "float32",
        "name": "variance",
        "description": "Measurement variance , 0 for unknown / invalid readings",
        "units": "in m^2",
        "default_value": null
      },
      "type": {
        "type": "uint8",
        "name": "type",
        "description": "Type from MAV_DISTANCE_SENSOR enum",
        "units": null,
        "default_value": null
      },
      "h_fov": {
        "type": "float32",
        "name": "h_fov",
        "description": "Sensor horizontal field of view",
        "units": "rad",
        "default_value": null
      },
      "v_fov": {
        "type": "float32",
        "name": "v_fov",
        "description": "Sensor vertical field of view",
        "units": "rad",
        "default_value": null
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "Quaterion sensor orientation with respect to the vehicle body frame to specify the orientation ROTATION_CUSTOM",
        "units": null,
        "default_value": null
      },
      "orientation": {
        "type": "uint8",
        "name": "orientation",
        "description": "Direction the sensor faces from MAV_SENSOR_ORIENTATION enum",
        "units": null,
        "default_value": null
      },
      "mode": {
        "type": "uint8",
        "name": "mode",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mappydot",
        "name": "mappydot",
        "type": "Module"
      },
      {
        "id": "m_mb12xx",
        "name": "mb12xx",
        "type": "Module"
      },
      {
        "id": "m_pga460",
        "name": "pga460",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_sih",
        "name": "simulator_sih",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_gps": {
    "name": "sensor_gps",
    "description": "GPS position in WGS84 coordinates.\nthe field 'timestamp' is for the position & velocity (microseconds)\nTOPICS sensor_gps vehicle_gps_position",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "",
        "units": null,
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "latitude_deg": {
        "type": "float64",
        "name": "latitude_deg",
        "description": "Latitude in degrees, allows centimeter level RTK precision",
        "units": null,
        "default_value": null
      },
      "longitude_deg": {
        "type": "float64",
        "name": "longitude_deg",
        "description": "Longitude in degrees, allows centimeter level RTK precision",
        "units": null,
        "default_value": null
      },
      "altitude_msl_m": {
        "type": "float64",
        "name": "altitude_msl_m",
        "description": "Altitude above MSL, meters",
        "units": null,
        "default_value": null
      },
      "altitude_ellipsoid_m": {
        "type": "float64",
        "name": "altitude_ellipsoid_m",
        "description": "Altitude above Ellipsoid, meters",
        "units": null,
        "default_value": null
      },
      "s_variance_m_s": {
        "type": "float32",
        "name": "s_variance_m_s",
        "description": "GPS speed accuracy estimate,",
        "units": "metres/sec",
        "default_value": null
      },
      "c_variance_rad": {
        "type": "float32",
        "name": "c_variance_rad",
        "description": "GPS course accuracy estimate,",
        "units": "radians",
        "default_value": null
      },
      "fix_type": {
        "type": "uint8",
        "name": "fix_type",
        "description": "Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.",
        "units": null,
        "default_value": null
      },
      "eph": {
        "type": "float32",
        "name": "eph",
        "description": "GPS horizontal position accuracy",
        "units": "metres",
        "default_value": null
      },
      "epv": {
        "type": "float32",
        "name": "epv",
        "description": "GPS vertical position accuracy",
        "units": "metres",
        "default_value": null
      },
      "hdop": {
        "type": "float32",
        "name": "hdop",
        "description": "Horizontal dilution of precision",
        "units": null,
        "default_value": null
      },
      "vdop": {
        "type": "float32",
        "name": "vdop",
        "description": "Vertical dilution of precision",
        "units": null,
        "default_value": null
      },
      "noise_per_ms": {
        "type": "int32",
        "name": "noise_per_ms",
        "description": "GPS noise per millisecond",
        "units": null,
        "default_value": null
      },
      "automatic_gain_control": {
        "type": "uint16",
        "name": "automatic_gain_control",
        "description": "Automatic gain control monitor",
        "units": null,
        "default_value": null
      },
      "jamming_state": {
        "type": "uint8",
        "name": "jamming_state",
        "description": "indicates whether jamming has been detected or suspected by the receivers. O: Unknown, 1: OK, 2: Warning, 3: Critical",
        "units": null,
        "default_value": null
      },
      "jamming_indicator": {
        "type": "int32",
        "name": "jamming_indicator",
        "description": "indicates jamming is occurring",
        "units": null,
        "default_value": null
      },
      "spoofing_state": {
        "type": "uint8",
        "name": "spoofing_state",
        "description": "indicates whether spoofing has been detected or suspected by the receivers. O: Unknown, 1: OK, 2: Warning, 3: Critical",
        "units": null,
        "default_value": null
      },
      "vel_m_s": {
        "type": "float32",
        "name": "vel_m_s",
        "description": "GPS ground speed,",
        "units": "metres/sec",
        "default_value": null
      },
      "vel_n_m_s": {
        "type": "float32",
        "name": "vel_n_m_s",
        "description": "GPS North velocity,",
        "units": "metres/sec",
        "default_value": null
      },
      "vel_e_m_s": {
        "type": "float32",
        "name": "vel_e_m_s",
        "description": "GPS East velocity,",
        "units": "metres/sec",
        "default_value": null
      },
      "vel_d_m_s": {
        "type": "float32",
        "name": "vel_d_m_s",
        "description": "GPS Down velocity,",
        "units": "metres/sec",
        "default_value": null
      },
      "cog_rad": {
        "type": "float32",
        "name": "cog_rad",
        "description": "Course over ground , -PI..PI, (radians)",
        "units": "NOT heading, but direction of movement",
        "default_value": null
      },
      "vel_ned_valid": {
        "type": "bool",
        "name": "vel_ned_valid",
        "description": "True if NED velocity is valid",
        "units": null,
        "default_value": null
      },
      "time_utc_usec": {
        "type": "uint64",
        "name": "time_utc_usec",
        "description": "Timestamp , this is the timestamp which comes from the gps module. It might be unavailable right after cold start, indicated by a value of 0",
        "units": "microseconds, UTC",
        "default_value": null
      },
      "satellites_used": {
        "type": "uint8",
        "name": "satellites_used",
        "description": "Number of satellites used",
        "units": null,
        "default_value": null
      },
      "heading": {
        "type": "float32",
        "name": "heading",
        "description": "heading angle of XYZ body frame rel to NED. Set to NaN if not available and updated , (rad, [-PI, PI])",
        "units": "used for dual antenna GPS",
        "default_value": null
      },
      "heading_offset": {
        "type": "float32",
        "name": "heading_offset",
        "description": "heading offset of dual antenna array in body frame. Set to NaN if not applicable.",
        "units": "rad, [-PI, PI]",
        "default_value": null
      },
      "heading_accuracy": {
        "type": "float32",
        "name": "heading_accuracy",
        "description": "heading accuracy",
        "units": "rad, [0, 2PI]",
        "default_value": null
      },
      "rtcm_injection_rate": {
        "type": "float32",
        "name": "rtcm_injection_rate",
        "description": "RTCM message injection rate Hz",
        "units": null,
        "default_value": null
      },
      "selected_rtcm_instance": {
        "type": "uint8",
        "name": "selected_rtcm_instance",
        "description": "uorb instance that is being used for RTCM corrections",
        "units": null,
        "default_value": null
      },
      "rtcm_crc_failed": {
        "type": "bool",
        "name": "rtcm_crc_failed",
        "description": "RTCM message CRC failure detected",
        "units": null,
        "default_value": null
      },
      "rtcm_msg_used": {
        "type": "uint8",
        "name": "rtcm_msg_used",
        "description": "Indicates if the RTCM message was used successfully by the receiver",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_septentrio",
        "name": "septentrio",
        "type": "Module"
      },
      {
        "id": "m_gps",
        "name": "gps",
        "type": "Module"
      },
      {
        "id": "m_vectornav",
        "name": "vectornav",
        "type": "Module"
      },
      {
        "id": "m_fake_gps",
        "name": "fake_gps",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_sensor_gps_sim",
        "name": "sensor_gps_sim",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_cyphal",
        "name": "cyphal",
        "type": "Module"
      },
      {
        "id": "m_pps_capture",
        "name": "pps_capture",
        "type": "Module"
      },
      {
        "id": "m_sagetech_mxs",
        "name": "sagetech_mxs",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gps_inject_data": {
    "name": "gps_inject_data",
    "description": "Contains gps inject data data including device_id (unique device id for the sensor that does not change between power cycles), len (length of data), data (data to write to gps device).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "len": {
        "type": "uint16",
        "name": "len",
        "description": "length of data",
        "units": null,
        "default_value": null
      },
      "data": {
        "type": "uint8[300]",
        "name": "data",
        "description": "data to write to GPS device",
        "units": "RTCM message",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_septentrio",
        "name": "septentrio",
        "type": "Module"
      },
      {
        "id": "m_gps",
        "name": "gps",
        "type": "Module"
      },
      {
        "id": "m_uavcannode",
        "name": "uavcannode",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_septentrio",
        "name": "septentrio",
        "type": "Module"
      },
      {
        "id": "m_gps",
        "name": "gps",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_satellite_info": {
    "name": "satellite_info",
    "description": "Contains satellite info data including count (number of satellites visible to the receiver), svid (space vehicle id [1..255], see scheme below), used (0: satellite not used, 1: used for navigation), and 4 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "count": {
        "type": "uint8",
        "name": "count",
        "description": "Number of satellites visible to the receiver",
        "units": null,
        "default_value": null
      },
      "svid": {
        "type": "uint8[20]",
        "name": "svid",
        "description": "Space vehicle ID [1..255], see scheme below",
        "units": null,
        "default_value": null
      },
      "used": {
        "type": "uint8[20]",
        "name": "used",
        "description": "0: Satellite not used, 1: used for navigation",
        "units": null,
        "default_value": null
      },
      "elevation": {
        "type": "uint8[20]",
        "name": "elevation",
        "description": "Elevation  of satellite",
        "units": "0: right on top of receiver, 90: on the horizon",
        "default_value": null
      },
      "azimuth": {
        "type": "uint8[20]",
        "name": "azimuth",
        "description": "Direction of satellite, 0: 0 deg, 255: 360 deg.",
        "units": null,
        "default_value": null
      },
      "snr": {
        "type": "uint8[20]",
        "name": "snr",
        "description": "dBHz, Signal to noise ratio of satellite C/N0, range 0..99, zero when not tracking this satellite.",
        "units": null,
        "default_value": null
      },
      "prn": {
        "type": "uint8[20]",
        "name": "prn",
        "description": "Satellite PRN code assignment,",
        "units": "psuedorandom number SBAS, valid codes are 120-144",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_septentrio",
        "name": "septentrio",
        "type": "Module"
      },
      {
        "id": "m_gps",
        "name": "gps",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_hygrometer": {
    "name": "sensor_hygrometer",
    "description": "Contains sensor hygrometer data including device_id (unique device id for the sensor that does not change between power cycles), temperature (temperature provided by sensor), humidity (humidity provided by sensor).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "",
        "units": null,
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "temperature": {
        "type": "float32",
        "name": "temperature",
        "description": "Temperature provided by sensor",
        "units": "Celsius",
        "default_value": null
      },
      "humidity": {
        "type": "float32",
        "name": "humidity",
        "description": "Humidity provided by sensor",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_sht3x",
        "name": "sht3x",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_selection": {
    "name": "sensor_selection",
    "description": "\nSensor ID's for the voted sensors output on the sensor_combined topic.\nWill be updated on startup of the sensor module and when sensor selection changes\n",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "accel_device_id": {
        "type": "uint32",
        "name": "accel_device_id",
        "description": "unique device ID for the selected accelerometers",
        "units": null,
        "default_value": null
      },
      "gyro_device_id": {
        "type": "uint32",
        "name": "gyro_device_id",
        "description": "unique device ID for the selected rate gyros",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_vectornav",
        "name": "vectornav",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_gyro_fft",
        "name": "gyro_fft",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_estimator_status": {
    "name": "estimator_status",
    "description": "bits are true when corresponding test has failed\n0 - true if the fusion of the magnetometer X-axis has encountered a numerical error\n1 - true if the fusion of the magnetometer Y-axis has encountered a numerical error\n2 - true if the fusion of the magnetometer Z-axis has encountered a numerical error\n3 - true if the fusion of the magnetic heading has encountered a numerical error\n4 - true if the fusion of the magnetic declination has encountered a numerical error\n5 - true if fusion of the airspeed has encountered a numerical error\n6 - true if fusion of the synthetic sideslip constraint has encountered a numerical error\n7 - true if fusion of the optical flow X axis has encountered a numerical error\n8 - true if fusion of the optical flow Y axis has encountered a numerical error\n9 - true if fusion of the North velocity has encountered a numerical error\n10 - true if fusion of the East velocity has encountered a numerical error\n11 - true if fusion of the Down velocity has encountered a numerical error\n12 - true if fusion of the North position has encountered a numerical error\n13 - true if fusion of the East position has encountered a numerical error\n14 - true if fusion of the Down position has encountered a numerical error\n15 - true if bad delta velocity bias estimates have been detected\n16 - true if bad vertical accelerometer data has been detected\n17 - true if delta velocity data contains clipping (asymmetric railing)\n0 - True if the attitude estimate is good\n1 - True if the horizontal velocity estimate is good\n2 - True if the vertical velocity estimate is good\n3 - True if the horizontal position (relative) estimate is good\n4 - True if the horizontal position (absolute) estimate is good\n5 - True if the vertical position (absolute) estimate is good\n6 - True if the vertical position (above ground) estimate is good\n7 - True if the EKF is in a constant position mode and is not using external measurements (eg GPS or optical flow)\n8 - True if the EKF has sufficient data to enter a mode that will provide a (relative) position estimate\n9 - True if the EKF has sufficient data to enter a mode that will provide a (absolute) position estimate\n10 - True if the EKF has detected a GPS glitch\n11 - True if the EKF has detected bad accelerometer data\nlegacy local position estimator (LPE) flags",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "the timestamp of the raw data",
        "units": "microseconds",
        "default_value": null
      },
      "output_tracking_error": {
        "type": "float32[3]",
        "name": "output_tracking_error",
        "description": "return a vector containing the output predictor angular, velocity and position tracking error magnitudes , (m/s), (m)",
        "units": "rad",
        "default_value": null
      },
      "gps_check_fail_flags": {
        "type": "uint16",
        "name": "gps_check_fail_flags",
        "description": "Bitmask to indicate status of GPS checks - see definition below",
        "units": null,
        "default_value": null
      },
      "control_mode_flags": {
        "type": "uint64",
        "name": "control_mode_flags",
        "description": "Bitmask to indicate EKF logic state",
        "units": null,
        "default_value": null
      },
      "filter_fault_flags": {
        "type": "uint32",
        "name": "filter_fault_flags",
        "description": "Bitmask to indicate EKF internal faults",
        "units": null,
        "default_value": null
      },
      "pos_horiz_accuracy": {
        "type": "float32",
        "name": "pos_horiz_accuracy",
        "description": "1-Sigma estimated horizontal position accuracy relative to the estimators origin",
        "units": "m",
        "default_value": null
      },
      "pos_vert_accuracy": {
        "type": "float32",
        "name": "pos_vert_accuracy",
        "description": "1-Sigma estimated vertical position accuracy relative to the estimators origin",
        "units": "m",
        "default_value": null
      },
      "hdg_test_ratio": {
        "type": "float32",
        "name": "hdg_test_ratio",
        "description": "low-pass filtered ratio of the largest heading innovation component to the innovation test limit",
        "units": null,
        "default_value": null
      },
      "vel_test_ratio": {
        "type": "float32",
        "name": "vel_test_ratio",
        "description": "low-pass filtered ratio of the largest velocity innovation component to the innovation test limit",
        "units": null,
        "default_value": null
      },
      "pos_test_ratio": {
        "type": "float32",
        "name": "pos_test_ratio",
        "description": "low-pass filtered ratio of the largest horizontal position innovation component to the innovation test limit",
        "units": null,
        "default_value": null
      },
      "hgt_test_ratio": {
        "type": "float32",
        "name": "hgt_test_ratio",
        "description": "low-pass filtered ratio of the vertical position innovation to the innovation test limit",
        "units": null,
        "default_value": null
      },
      "tas_test_ratio": {
        "type": "float32",
        "name": "tas_test_ratio",
        "description": "low-pass filtered ratio of the true airspeed innovation to the innovation test limit",
        "units": null,
        "default_value": null
      },
      "hagl_test_ratio": {
        "type": "float32",
        "name": "hagl_test_ratio",
        "description": "low-pass filtered ratio of the height above ground innovation to the innovation test limit",
        "units": null,
        "default_value": null
      },
      "beta_test_ratio": {
        "type": "float32",
        "name": "beta_test_ratio",
        "description": "low-pass filtered ratio of the synthetic sideslip innovation to the innovation test limit",
        "units": null,
        "default_value": null
      },
      "solution_status_flags": {
        "type": "uint16",
        "name": "solution_status_flags",
        "description": "Bitmask indicating which filter kinematic state outputs are valid for flight control use.",
        "units": null,
        "default_value": null
      },
      "reset_count_vel_ne": {
        "type": "uint8",
        "name": "reset_count_vel_ne",
        "description": "number of horizontal position reset events",
        "units": "allow to wrap if count exceeds 255",
        "default_value": null
      },
      "reset_count_vel_d": {
        "type": "uint8",
        "name": "reset_count_vel_d",
        "description": "number of vertical velocity reset events",
        "units": "allow to wrap if count exceeds 255",
        "default_value": null
      },
      "reset_count_pos_ne": {
        "type": "uint8",
        "name": "reset_count_pos_ne",
        "description": "number of horizontal position reset events",
        "units": "allow to wrap if count exceeds 255",
        "default_value": null
      },
      "reset_count_pod_d": {
        "type": "uint8",
        "name": "reset_count_pod_d",
        "description": "number of vertical position reset events",
        "units": "allow to wrap if count exceeds 255",
        "default_value": null
      },
      "reset_count_quat": {
        "type": "uint8",
        "name": "reset_count_quat",
        "description": "number of quaternion reset events",
        "units": "allow to wrap if count exceeds 255",
        "default_value": null
      },
      "time_slip": {
        "type": "float32",
        "name": "time_slip",
        "description": "cumulative amount of time in seconds that the EKF inertial calculation has slipped relative to system time",
        "units": null,
        "default_value": null
      },
      "pre_flt_fail_innov_heading": {
        "type": "bool",
        "name": "pre_flt_fail_innov_heading",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pre_flt_fail_innov_height": {
        "type": "bool",
        "name": "pre_flt_fail_innov_height",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pre_flt_fail_innov_pos_horiz": {
        "type": "bool",
        "name": "pre_flt_fail_innov_pos_horiz",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pre_flt_fail_innov_vel_horiz": {
        "type": "bool",
        "name": "pre_flt_fail_innov_vel_horiz",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pre_flt_fail_innov_vel_vert": {
        "type": "bool",
        "name": "pre_flt_fail_innov_vel_vert",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pre_flt_fail_mag_field_disturbed": {
        "type": "bool",
        "name": "pre_flt_fail_mag_field_disturbed",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_device_id": {
        "type": "uint32",
        "name": "accel_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_device_id": {
        "type": "uint32",
        "name": "gyro_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "baro_device_id": {
        "type": "uint32",
        "name": "baro_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_device_id": {
        "type": "uint32",
        "name": "mag_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "health_flags": {
        "type": "uint8",
        "name": "health_flags",
        "description": "Bitmask to indicate sensor health states",
        "units": "vel, pos, hgt",
        "default_value": null
      },
      "timeout_flags": {
        "type": "uint8",
        "name": "timeout_flags",
        "description": "Bitmask to indicate timeout flags",
        "units": "vel, pos, hgt",
        "default_value": null
      },
      "mag_inclination_deg": {
        "type": "float32",
        "name": "mag_inclination_deg",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_inclination_ref_deg": {
        "type": "float32",
        "name": "mag_inclination_ref_deg",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_strength_gs": {
        "type": "float32",
        "name": "mag_strength_gs",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_strength_ref_gs": {
        "type": "float32",
        "name": "mag_strength_ref_gs",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_vectornav",
        "name": "vectornav",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_irlock_report": {
    "name": "irlock_report",
    "description": "IRLOCK_REPORT message data\nWhen looking along the optical axis of the camera, x points right, y points down, and z points along the optical axis.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "signature": {
        "type": "uint16",
        "name": "signature",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pos_x": {
        "type": "float32",
        "name": "pos_x",
        "description": "tan, where theta is the angle between the target and the camera center of projection in camera x-axis",
        "units": "theta",
        "default_value": null
      },
      "pos_y": {
        "type": "float32",
        "name": "pos_y",
        "description": "tan, where theta is the angle between the target and the camera center of projection in camera y-axis",
        "units": "theta",
        "default_value": null
      },
      "size_x": {
        "type": "float32",
        "name": "size_x",
        "description": "/** size of target along camera x-axis in units of tan **/",
        "units": "theta",
        "default_value": null
      },
      "size_y": {
        "type": "float32",
        "name": "size_y",
        "description": "/** size of target along camera y-axis in units of tan **/",
        "units": "theta",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_irlock",
        "name": "irlock",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_landing_target_estimator",
        "name": "landing_target_estimator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_optical_flow": {
    "name": "sensor_optical_flow",
    "description": "Contains sensor optical flow data including device_id (unique device id for the sensor that does not change between power cycles), pixel_flow (optical flow in radians where a positive value is produced by a rh rotation about the body axis), delta_angle (accumulated gyro radians where a positive value is produced by a rh rotation about the body axis. set to nan if flow sensor does not have 3-axis gyro data), and 10 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "",
        "units": null,
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "pixel_flow": {
        "type": "float32[2]",
        "name": "pixel_flow",
        "description": "optical flow in radians where a positive value is produced by a RH rotation about the body axis",
        "units": "radians",
        "default_value": null
      },
      "delta_angle": {
        "type": "float32[3]",
        "name": "delta_angle",
        "description": "accumulated gyro radians where a positive value is produced by a RH rotation about the body axis. Set to NaN if flow sensor does not have 3-axis gyro data.",
        "units": "radians",
        "default_value": null
      },
      "delta_angle_available": {
        "type": "bool",
        "name": "delta_angle_available",
        "description": "",
        "units": null,
        "default_value": null
      },
      "distance_m": {
        "type": "float32",
        "name": "distance_m",
        "description": "Distance to the center of the flow field",
        "units": "meters",
        "default_value": null
      },
      "distance_available": {
        "type": "bool",
        "name": "distance_available",
        "description": "",
        "units": null,
        "default_value": null
      },
      "integration_timespan_us": {
        "type": "uint32",
        "name": "integration_timespan_us",
        "description": "accumulation timespan in microseconds",
        "units": "microseconds",
        "default_value": null
      },
      "quality": {
        "type": "uint8",
        "name": "quality",
        "description": "quality, 0: bad quality, 255: maximum quality",
        "units": null,
        "default_value": null
      },
      "error_count": {
        "type": "uint32",
        "name": "error_count",
        "description": "",
        "units": null,
        "default_value": null
      },
      "max_flow_rate": {
        "type": "float32",
        "name": "max_flow_rate",
        "description": "Magnitude of maximum angular which the optical flow sensor can measure reliably",
        "units": "radians/s",
        "default_value": null
      },
      "min_ground_distance": {
        "type": "float32",
        "name": "min_ground_distance",
        "description": "Minimum distance from ground at which the optical flow sensor operates reliably",
        "units": "meters",
        "default_value": null
      },
      "max_ground_distance": {
        "type": "float32",
        "name": "max_ground_distance",
        "description": "Maximum distance from ground at which the optical flow sensor operates reliably",
        "units": "meters",
        "default_value": null
      },
      "mode": {
        "type": "uint8",
        "name": "mode",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_paa3905",
        "name": "paa3905",
        "type": "Module"
      },
      {
        "id": "m_paw3902",
        "name": "paw3902",
        "type": "Module"
      },
      {
        "id": "m_pmw3901",
        "name": "pmw3901",
        "type": "Module"
      },
      {
        "id": "m_px4flow",
        "name": "px4flow",
        "type": "Module"
      },
      {
        "id": "m_thoneflow",
        "name": "thoneflow",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_pps_capture": {
    "name": "pps_capture",
    "description": "Contains pps capture data including rtc_timestamp (corrected gps utc timestamp at pps capture event), pps_rate_exceeded_counter (increments when pps dt < 50ms).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start  at PPS capture event",
        "units": "microseconds",
        "default_value": null
      },
      "rtc_timestamp": {
        "type": "uint64",
        "name": "rtc_timestamp",
        "description": "Corrected GPS UTC timestamp at PPS capture event",
        "units": null,
        "default_value": null
      },
      "pps_rate_exceeded_counter": {
        "type": "uint8",
        "name": "pps_rate_exceeded_counter",
        "description": "Increments when PPS dt < 50ms",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_pps_capture",
        "name": "pps_capture",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_camera_capture",
        "name": "camera_capture",
        "type": "Module"
      },
      {
        "id": "m_camera_trigger",
        "name": "camera_trigger",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_pwm_input": {
    "name": "pwm_input",
    "description": "Contains pwm input data including error_count (timer overcapture error flag), pulse_width (pulse width, timer counts), period (period, timer counts).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "Time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "error_count": {
        "type": "uint64",
        "name": "error_count",
        "description": "Timer overcapture error flag",
        "units": "AUX5 or MAIN5",
        "default_value": null
      },
      "pulse_width": {
        "type": "uint32",
        "name": "pulse_width",
        "description": "Pulse width, timer counts",
        "units": "microseconds",
        "default_value": null
      },
      "period": {
        "type": "uint32",
        "name": "period",
        "description": "Period, timer counts",
        "units": "microseconds",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_pwm_input",
        "name": "pwm_input",
        "type": "Module"
      },
      {
        "id": "m_rpm_capture",
        "name": "rpm_capture",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_ll40ls_pwm",
        "name": "ll40ls_pwm",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_px4io_status": {
    "name": "px4io_status",
    "description": "PX4IO status flags (PX4IO_P_STATUS_FLAGS)\nPX4IO alarms (PX4IO_P_STATUS_ALARMS)\nPX4IO arming (PX4IO_P_SETUP_ARMING)",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "free_memory_bytes": {
        "type": "uint16",
        "name": "free_memory_bytes",
        "description": "",
        "units": null,
        "default_value": null
      },
      "voltage_v": {
        "type": "float32",
        "name": "voltage_v",
        "description": "Servo rail voltage in volts",
        "units": null,
        "default_value": null
      },
      "rssi_v": {
        "type": "float32",
        "name": "rssi_v",
        "description": "RSSI pin voltage in volts",
        "units": null,
        "default_value": null
      },
      "status_arm_sync": {
        "type": "bool",
        "name": "status_arm_sync",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_failsafe": {
        "type": "bool",
        "name": "status_failsafe",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_fmu_initialized": {
        "type": "bool",
        "name": "status_fmu_initialized",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_fmu_ok": {
        "type": "bool",
        "name": "status_fmu_ok",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_init_ok": {
        "type": "bool",
        "name": "status_init_ok",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_outputs_armed": {
        "type": "bool",
        "name": "status_outputs_armed",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_raw_pwm": {
        "type": "bool",
        "name": "status_raw_pwm",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_rc_ok": {
        "type": "bool",
        "name": "status_rc_ok",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_rc_dsm": {
        "type": "bool",
        "name": "status_rc_dsm",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_rc_ppm": {
        "type": "bool",
        "name": "status_rc_ppm",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_rc_sbus": {
        "type": "bool",
        "name": "status_rc_sbus",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_rc_st24": {
        "type": "bool",
        "name": "status_rc_st24",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_rc_sumd": {
        "type": "bool",
        "name": "status_rc_sumd",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status_safety_button_event": {
        "type": "bool",
        "name": "status_safety_button_event",
        "description": "px4io safety button was pressed for longer than 1 second",
        "units": null,
        "default_value": null
      },
      "alarm_pwm_error": {
        "type": "bool",
        "name": "alarm_pwm_error",
        "description": "",
        "units": null,
        "default_value": null
      },
      "alarm_rc_lost": {
        "type": "bool",
        "name": "alarm_rc_lost",
        "description": "",
        "units": null,
        "default_value": null
      },
      "arming_failsafe_custom": {
        "type": "bool",
        "name": "arming_failsafe_custom",
        "description": "",
        "units": null,
        "default_value": null
      },
      "arming_fmu_armed": {
        "type": "bool",
        "name": "arming_fmu_armed",
        "description": "",
        "units": null,
        "default_value": null
      },
      "arming_fmu_prearmed": {
        "type": "bool",
        "name": "arming_fmu_prearmed",
        "description": "",
        "units": null,
        "default_value": null
      },
      "arming_force_failsafe": {
        "type": "bool",
        "name": "arming_force_failsafe",
        "description": "",
        "units": null,
        "default_value": null
      },
      "arming_io_arm_ok": {
        "type": "bool",
        "name": "arming_io_arm_ok",
        "description": "",
        "units": null,
        "default_value": null
      },
      "arming_lockdown": {
        "type": "bool",
        "name": "arming_lockdown",
        "description": "",
        "units": null,
        "default_value": null
      },
      "arming_termination_failsafe": {
        "type": "bool",
        "name": "arming_termination_failsafe",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pwm": {
        "type": "uint16[8]",
        "name": "pwm",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pwm_disarmed": {
        "type": "uint16[8]",
        "name": "pwm_disarmed",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pwm_failsafe": {
        "type": "uint16[8]",
        "name": "pwm_failsafe",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pwm_rate_hz": {
        "type": "uint16[8]",
        "name": "pwm_rate_hz",
        "description": "",
        "units": null,
        "default_value": null
      },
      "raw_inputs": {
        "type": "uint16[18]",
        "name": "raw_inputs",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_px4io",
        "name": "px4io",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_px4io",
        "name": "px4io",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_input_rc": {
    "name": "input_rc",
    "description": "Contains input rc data including timestamp_last_signal (last valid reception time), channel_count (number of channels actually being seen), rssi (receive signal strength indicator : < 0: undefined, 0: no signal, 100: full reception), and 7 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_last_signal": {
        "type": "uint64",
        "name": "timestamp_last_signal",
        "description": "last valid reception time",
        "units": null,
        "default_value": null
      },
      "channel_count": {
        "type": "uint8",
        "name": "channel_count",
        "description": "number of channels actually being seen",
        "units": null,
        "default_value": null
      },
      "rssi": {
        "type": "int32",
        "name": "rssi",
        "description": "receive signal strength indicator : < 0: Undefined, 0: no signal, 100: full reception",
        "units": "RSSI",
        "default_value": null
      },
      "rc_failsafe": {
        "type": "bool",
        "name": "rc_failsafe",
        "description": "explicit failsafe flag: true on TX failure or TX out of range , false otherwise. Only the true state is reliable, as there are some  receivers on the market going into failsafe without telling us explicitly.",
        "units": "PPM",
        "default_value": null
      },
      "rc_lost": {
        "type": "bool",
        "name": "rc_lost",
        "description": "RC receiver connection status: True,if no frame has arrived in the expected time, false otherwise. True usually means that the receiver has been disconnected, but can also indicate a radio link loss on \"stupid\" systems. Will remain false, if a RX with failsafe option continues to transmit frames after a link loss.",
        "units": null,
        "default_value": null
      },
      "rc_lost_frame_count": {
        "type": "uint16",
        "name": "rc_lost_frame_count",
        "description": "Number of lost RC frames. Note: intended purpose: observe the radio link quality if RSSI is not available. This value must not be used to trigger any failsafe-alike functionality.",
        "units": null,
        "default_value": null
      },
      "rc_total_frame_count": {
        "type": "uint16",
        "name": "rc_total_frame_count",
        "description": "Number of total RC frames. Note: intended purpose: observe the radio link quality if RSSI is not available. This value must not be used to trigger any failsafe-alike functionality.",
        "units": null,
        "default_value": null
      },
      "rc_ppm_frame_length": {
        "type": "uint16",
        "name": "rc_ppm_frame_length",
        "description": "Length of a single PPM frame. Zero for non-PPM systems",
        "units": null,
        "default_value": null
      },
      "input_source": {
        "type": "uint8",
        "name": "input_source",
        "description": "Input source",
        "units": null,
        "default_value": null
      },
      "values": {
        "type": "uint16[18]",
        "name": "values",
        "description": "measured pulse widths for each of the supported channels",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_px4io",
        "name": "px4io",
        "type": "Module"
      },
      {
        "id": "m_crsf_rc",
        "name": "crsf_rc",
        "type": "Module"
      },
      {
        "id": "m_dsm_rc",
        "name": "dsm_rc",
        "type": "Module"
      },
      {
        "id": "m_ghst_rc",
        "name": "ghst_rc",
        "type": "Module"
      },
      {
        "id": "m_sbus_rc",
        "name": "sbus_rc",
        "type": "Module"
      },
      {
        "id": "m_rc_input",
        "name": "rc_input",
        "type": "Module"
      },
      {
        "id": "m_rpi_rc_in",
        "name": "rpi_rc_in",
        "type": "Module"
      },
      {
        "id": "m_voxl2_io",
        "name": "voxl2_io",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_msp_osd",
        "name": "msp_osd",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_rc_update",
        "name": "rc_update",
        "type": "Module"
      },
      {
        "id": "m_tests",
        "name": "tests",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_rpm": {
    "name": "rpm",
    "description": "rpm values of 0.0 mean within a timeout there is no movement measured",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "rpm_estimate": {
        "type": "float32",
        "name": "rpm_estimate",
        "description": "filtered revolutions per minute",
        "units": null,
        "default_value": null
      },
      "rpm_raw": {
        "type": "float32",
        "name": "rpm_raw",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_pcf8583",
        "name": "pcf8583",
        "type": "Module"
      },
      {
        "id": "m_rpm_simulator",
        "name": "rpm_simulator",
        "type": "Module"
      },
      {
        "id": "m_rpm_capture",
        "name": "rpm_capture",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_internal_combustion_engine_control",
        "name": "internal_combustion_engine_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_iridiumsbd_status": {
    "name": "iridiumsbd_status",
    "description": "Contains iridiumsbd status data including last_at_ok_timestamp (timestamp of the last \"ok\" received after the \"at\" command), tx_buf_write_index (current size of the tx buffer), rx_buf_read_index (the rx buffer is parsed up to that index), and 11 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "last_at_ok_timestamp": {
        "type": "uint64",
        "name": "last_at_ok_timestamp",
        "description": "timestamp of the last \"OK\" received after the \"AT\" command",
        "units": null,
        "default_value": null
      },
      "tx_buf_write_index": {
        "type": "uint16",
        "name": "tx_buf_write_index",
        "description": "current size of the tx buffer",
        "units": null,
        "default_value": null
      },
      "rx_buf_read_index": {
        "type": "uint16",
        "name": "rx_buf_read_index",
        "description": "the rx buffer is parsed up to that index",
        "units": null,
        "default_value": null
      },
      "rx_buf_end_index": {
        "type": "uint16",
        "name": "rx_buf_end_index",
        "description": "current size of the rx buffer",
        "units": null,
        "default_value": null
      },
      "failed_sbd_sessions": {
        "type": "uint16",
        "name": "failed_sbd_sessions",
        "description": "number of failed sbd sessions",
        "units": null,
        "default_value": null
      },
      "successful_sbd_sessions": {
        "type": "uint16",
        "name": "successful_sbd_sessions",
        "description": "number of successful sbd sessions",
        "units": null,
        "default_value": null
      },
      "num_tx_buf_reset": {
        "type": "uint16",
        "name": "num_tx_buf_reset",
        "description": "number of times the tx buffer was reset",
        "units": null,
        "default_value": null
      },
      "signal_quality": {
        "type": "uint8",
        "name": "signal_quality",
        "description": "current signal quality, 0 is no signal, 5 the best",
        "units": null,
        "default_value": null
      },
      "state": {
        "type": "uint8",
        "name": "state",
        "description": "current state of the driver, see the satcom_state of IridiumSBD.h for the definition",
        "units": null,
        "default_value": null
      },
      "ring_pending": {
        "type": "bool",
        "name": "ring_pending",
        "description": "indicates if a ring call is pending",
        "units": null,
        "default_value": null
      },
      "tx_buf_write_pending": {
        "type": "bool",
        "name": "tx_buf_write_pending",
        "description": "indicates if a tx buffer write is pending",
        "units": null,
        "default_value": null
      },
      "tx_session_pending": {
        "type": "bool",
        "name": "tx_session_pending",
        "description": "indicates if a tx session is pending",
        "units": null,
        "default_value": null
      },
      "rx_read_pending": {
        "type": "bool",
        "name": "rx_read_pending",
        "description": "indicates if a rx read is pending",
        "units": null,
        "default_value": null
      },
      "rx_session_pending": {
        "type": "bool",
        "name": "rx_session_pending",
        "description": "indicates if a rx session is pending",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_iridiumsbd",
        "name": "iridiumsbd",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_tune_control": {
    "name": "tune_control",
    "description": "This message is used to control the tunes, when the tune_id is set to CUSTOM\nthen the frequency, duration are used otherwise those values are ignored.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "tune_id": {
        "type": "uint8",
        "name": "tune_id",
        "description": "tune_id corresponding to TuneID::* from the tune_defaults.h in the tunes library",
        "units": null,
        "default_value": null
      },
      "tune_override": {
        "type": "bool",
        "name": "tune_override",
        "description": "if true the tune which is playing will be stopped and the new started",
        "units": null,
        "default_value": null
      },
      "frequency": {
        "type": "uint16",
        "name": "frequency",
        "description": "in Hz",
        "units": null,
        "default_value": null
      },
      "duration": {
        "type": "uint32",
        "name": "duration",
        "description": "in us",
        "units": null,
        "default_value": null
      },
      "silence": {
        "type": "uint32",
        "name": "silence",
        "description": "in us",
        "units": null,
        "default_value": null
      },
      "volume": {
        "type": "uint8",
        "name": "volume",
        "description": "value between 0-100 if supported by backend",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_tone_alarm",
        "name": "tone_alarm",
        "type": "Module"
      },
      {
        "id": "m_uavcannode",
        "name": "uavcannode",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_send_event",
        "name": "send_event",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_tune_control",
        "name": "tune_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_tap_esc",
        "name": "tap_esc",
        "type": "Module"
      },
      {
        "id": "m_tone_alarm",
        "name": "tone_alarm",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_transponder_report": {
    "name": "transponder_report",
    "description": "ADSB flags\nADSB Emitter Data:\nfrom mavlink/v2.0/common/common.h",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "icao_address": {
        "type": "uint32",
        "name": "icao_address",
        "description": "ICAO address",
        "units": null,
        "default_value": null
      },
      "lat": {
        "type": "float64",
        "name": "lat",
        "description": "Latitude, expressed as degrees",
        "units": null,
        "default_value": null
      },
      "lon": {
        "type": "float64",
        "name": "lon",
        "description": "Longitude, expressed as degrees",
        "units": null,
        "default_value": null
      },
      "altitude_type": {
        "type": "uint8",
        "name": "altitude_type",
        "description": "Type from ADSB_ALTITUDE_TYPE enum",
        "units": null,
        "default_value": null
      },
      "altitude": {
        "type": "float32",
        "name": "altitude",
        "description": "Altitude in meters",
        "units": "ASL",
        "default_value": null
      },
      "heading": {
        "type": "float32",
        "name": "heading",
        "description": "Course over ground in radians, -pi to +pi, 0 is north",
        "units": null,
        "default_value": null
      },
      "hor_velocity": {
        "type": "float32",
        "name": "hor_velocity",
        "description": "The horizontal velocity in m/s",
        "units": null,
        "default_value": null
      },
      "ver_velocity": {
        "type": "float32",
        "name": "ver_velocity",
        "description": "The vertical velocity in m/s, positive is up",
        "units": null,
        "default_value": null
      },
      "callsign": {
        "type": "char[9]",
        "name": "callsign",
        "description": "The callsign, 8+null",
        "units": null,
        "default_value": null
      },
      "emitter_type": {
        "type": "uint8",
        "name": "emitter_type",
        "description": "Type from ADSB_EMITTER_TYPE enum",
        "units": null,
        "default_value": null
      },
      "tslc": {
        "type": "uint8",
        "name": "tslc",
        "description": "Time since last communication in seconds",
        "units": null,
        "default_value": null
      },
      "flags": {
        "type": "uint16",
        "name": "flags",
        "description": "Flags to indicate various statuses including valid data fields",
        "units": null,
        "default_value": null
      },
      "squawk": {
        "type": "uint16",
        "name": "squawk",
        "description": "Squawk code",
        "units": null,
        "default_value": null
      },
      "uas_id": {
        "type": "uint8[18]",
        "name": "uas_id",
        "description": "Unique UAS ID",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_sagetech_mxs",
        "name": "sagetech_mxs",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_sagetech_mxs",
        "name": "sagetech_mxs",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_open_drone_id_arm_status": {
    "name": "open_drone_id_arm_status",
    "description": "Contains open drone id arm status data including status (), error ().",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "",
        "units": null,
        "default_value": null
      },
      "status": {
        "type": "uint8",
        "name": "status",
        "description": "",
        "units": null,
        "default_value": null
      },
      "error": {
        "type": "char[50]",
        "name": "error",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_uavcan_parameter_value": {
    "name": "uavcan_parameter_value",
    "description": "UAVCAN-MAVLink parameter bridge response type",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "node_id": {
        "type": "uint8",
        "name": "node_id",
        "description": "UAVCAN node ID mapped from MAVLink component ID",
        "units": null,
        "default_value": null
      },
      "param_id": {
        "type": "char[17]",
        "name": "param_id",
        "description": "MAVLink/UAVCAN parameter name",
        "units": null,
        "default_value": null
      },
      "param_index": {
        "type": "int16",
        "name": "param_index",
        "description": "parameter index, if known",
        "units": null,
        "default_value": null
      },
      "param_count": {
        "type": "uint16",
        "name": "param_count",
        "description": "number of parameters exposed by the node",
        "units": null,
        "default_value": null
      },
      "param_type": {
        "type": "uint8",
        "name": "param_type",
        "description": "MAVLink parameter type",
        "units": null,
        "default_value": null
      },
      "int_value": {
        "type": "int64",
        "name": "int_value",
        "description": "current value if param_type is int-like",
        "units": null,
        "default_value": null
      },
      "real_value": {
        "type": "float32",
        "name": "real_value",
        "description": "current value if param_type is float-like",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_actuator_armed": {
    "name": "actuator_armed",
    "description": "Contains actuator armed data including armed (set to true if system is armed), prearmed (set to true if the actuator safety is disabled but motors are not armed), ready_to_arm (set to true if system is ready to be armed), and 4 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "armed": {
        "type": "bool",
        "name": "armed",
        "description": "Set to true if system is armed",
        "units": null,
        "default_value": null
      },
      "prearmed": {
        "type": "bool",
        "name": "prearmed",
        "description": "Set to true if the actuator safety is disabled but motors are not armed",
        "units": null,
        "default_value": null
      },
      "ready_to_arm": {
        "type": "bool",
        "name": "ready_to_arm",
        "description": "Set to true if system is ready to be armed",
        "units": null,
        "default_value": null
      },
      "lockdown": {
        "type": "bool",
        "name": "lockdown",
        "description": "Set to true if actuators are forced to being disabled",
        "units": "due to emergency or HIL",
        "default_value": null
      },
      "manual_lockdown": {
        "type": "bool",
        "name": "manual_lockdown",
        "description": "Set to true if manual throttle kill switch is engaged",
        "units": null,
        "default_value": null
      },
      "force_failsafe": {
        "type": "bool",
        "name": "force_failsafe",
        "description": "Set to true if the actuators are forced to the failsafe position",
        "units": null,
        "default_value": null
      },
      "in_esc_calibration_mode": {
        "type": "bool",
        "name": "in_esc_calibration_mode",
        "description": "IO/FMU should ignore messages from the actuator controls topics",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_uavcannode",
        "name": "uavcannode",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_cdcacm_autostart",
        "name": "cdcacm_autostart",
        "type": "Module"
      },
      {
        "id": "m_cyphal",
        "name": "cyphal",
        "type": "Module"
      },
      {
        "id": "m_pm_selector_auterion",
        "name": "pm_selector_auterion",
        "type": "Module"
      },
      {
        "id": "m_px4io",
        "name": "px4io",
        "type": "Module"
      },
      {
        "id": "m_roboclaw",
        "name": "roboclaw",
        "type": "Module"
      },
      {
        "id": "m_safety_button",
        "name": "safety_button",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_actuator_servos": {
    "name": "actuator_servos",
    "description": "Contains direct actuator commands (motors, servos).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "control": {
        "type": "float32[]",
        "name": "control",
        "description": "Actuator control outputs",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_uavcannode",
        "name": "uavcannode",
        "type": "Module"
      },
      {
        "id": "m_control_allocator",
        "name": "control_allocator",
        "type": "Module"
      },
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_led_control": {
    "name": "led_control",
    "description": "LED control: control a single or multiple LED's.\nThese are the externally visible LED's, not the board LED's\ncolors\nLED modes definitions\nin MODE_FLASH it is the number of cycles. Max number of blinks: 122 and max number of flash cycles: 20",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "led_mask": {
        "type": "uint8",
        "name": "led_mask",
        "description": "bitmask which LED to control, set to 0xff for all",
        "units": "s",
        "default_value": null
      },
      "color": {
        "type": "uint8",
        "name": "color",
        "description": "see COLOR_*",
        "units": null,
        "default_value": null
      },
      "mode": {
        "type": "uint8",
        "name": "mode",
        "description": "see MODE_*",
        "units": null,
        "default_value": null
      },
      "num_blinks": {
        "type": "uint8",
        "name": "num_blinks",
        "description": "how many times to blink  . Set to 0 for infinite",
        "units": "number of on-off cycles if mode is one of MODE_BLINK_*",
        "default_value": null
      },
      "priority": {
        "type": "uint8",
        "name": "priority",
        "description": "priority: higher priority events will override current lower priority events",
        "units": "see MAX_PRIORITY",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_uavcannode",
        "name": "uavcannode",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_send_event",
        "name": "send_event",
        "type": "Module"
      },
      {
        "id": "m_temperature_compensation",
        "name": "temperature_compensation",
        "type": "Module"
      },
      {
        "id": "m_led_control",
        "name": "led_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_voxl_esc",
        "name": "voxl_esc",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_actuator_motors": {
    "name": "actuator_motors",
    "description": "Controls individual motor thrust values. Each motor's thrust is normalized between -1 (maximum negative) and 1 (maximum positive). NaN values indicate the motor should be disarmed.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "the timestamp the data this control response is based on was sampled",
        "units": "microseconds"
      },
      "reversible_flags": {
        "type": "uint16",
        "name": "reversible_flags",
        "description": "bitset which motors are configured to be reversible",
        "units": null
      },
      "control": {
        "type": "float32[12]",
        "name": "control",
        "description": "range: [-1, 1], where 1 means maximum positive thrust, -1 maximum negative (if not supported by the output, <0 maps to NaN), and NaN maps to disarmed (stop the motors)",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_uavcannode",
        "name": "uavcannode",
        "type": "Module"
      },
      {
        "id": "m_control_allocator",
        "name": "control_allocator",
        "type": "Module"
      },
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      },
      {
        "id": "m_rover_differential",
        "name": "rover_differential",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_internal_combustion_engine_control",
        "name": "internal_combustion_engine_control",
        "type": "Module"
      },
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      },
      {
        "id": "m_rover_differential",
        "name": "rover_differential",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_uwb": {
    "name": "sensor_uwb",
    "description": "UWB distance contains the distance information measured by an ultra-wideband positioning system,\nsuch as Pozyx or NXP Rddrone.\nAngle of arrival, Angle in Degree -60..+60; FOV in both axis is 120 degrees\nFigure of merit for the angle measurements\nInitiator physical configuration\nStandard configuration is Antennas facing down and azimuth aligened in forward direction",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "sessionid": {
        "type": "uint32",
        "name": "sessionid",
        "description": "UWB SessionID",
        "units": null,
        "default_value": null
      },
      "time_offset": {
        "type": "uint32",
        "name": "time_offset",
        "description": "Time between Ranging Rounds in ms",
        "units": null,
        "default_value": null
      },
      "counter": {
        "type": "uint32",
        "name": "counter",
        "description": "Number of Ranges since last Start of Ranging",
        "units": null,
        "default_value": null
      },
      "mac": {
        "type": "uint16",
        "name": "mac",
        "description": "MAC adress of Initiator",
        "units": "controller",
        "default_value": null
      },
      "mac_dest": {
        "type": "uint16",
        "name": "mac_dest",
        "description": "MAC adress of Responder",
        "units": "Controlee",
        "default_value": null
      },
      "status": {
        "type": "uint16",
        "name": "status",
        "description": "status feedback #",
        "units": null,
        "default_value": null
      },
      "nlos": {
        "type": "uint8",
        "name": "nlos",
        "description": "None line of site condition y/n",
        "units": null,
        "default_value": null
      },
      "distance": {
        "type": "float32",
        "name": "distance",
        "description": "distance in m to the UWB receiver",
        "units": null,
        "default_value": null
      },
      "aoa_azimuth_dev": {
        "type": "float32",
        "name": "aoa_azimuth_dev",
        "description": "Angle of arrival of first incomming RX msg",
        "units": null,
        "default_value": null
      },
      "aoa_elevation_dev": {
        "type": "float32",
        "name": "aoa_elevation_dev",
        "description": "Angle of arrival of first incomming RX msg",
        "units": null,
        "default_value": null
      },
      "aoa_azimuth_resp": {
        "type": "float32",
        "name": "aoa_azimuth_resp",
        "description": "Angle of arrival of first incomming RX msg at the responder",
        "units": null,
        "default_value": null
      },
      "aoa_elevation_resp": {
        "type": "float32",
        "name": "aoa_elevation_resp",
        "description": "Angle of arrival of first incomming RX msg at the responder",
        "units": null,
        "default_value": null
      },
      "aoa_azimuth_fom": {
        "type": "uint8",
        "name": "aoa_azimuth_fom",
        "description": "AOA Azimuth FOM",
        "units": null,
        "default_value": null
      },
      "aoa_elevation_fom": {
        "type": "uint8",
        "name": "aoa_elevation_fom",
        "description": "AOA Elevation FOM",
        "units": null,
        "default_value": null
      },
      "aoa_dest_azimuth_fom": {
        "type": "uint8",
        "name": "aoa_dest_azimuth_fom",
        "description": "AOA Azimuth FOM",
        "units": null,
        "default_value": null
      },
      "aoa_dest_elevation_fom": {
        "type": "uint8",
        "name": "aoa_dest_elevation_fom",
        "description": "AOA Elevation FOM",
        "units": null,
        "default_value": null
      },
      "orientation": {
        "type": "uint8",
        "name": "orientation",
        "description": "Direction the sensor faces from MAV_SENSOR_ORIENTATION enum",
        "units": null,
        "default_value": null
      },
      "offset_x": {
        "type": "float32",
        "name": "offset_x",
        "description": "UWB initiator offset in X axis",
        "units": "NED drone frame",
        "default_value": null
      },
      "offset_y": {
        "type": "float32",
        "name": "offset_y",
        "description": "UWB initiator offset in Y axis",
        "units": "NED drone frame",
        "default_value": null
      },
      "offset_z": {
        "type": "float32",
        "name": "offset_z",
        "description": "UWB initiator offset in Z axis",
        "units": "NED drone frame",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_uwb_sr150",
        "name": "uwb_sr150",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_uwb_sr150",
        "name": "uwb_sr150",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_debug_array": {
    "name": "debug_array",
    "description": "Contains debug array data including id (unique id of debug array, used to discriminate between arrays), name (name of the debug array), data (data).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "id": {
        "type": "uint16",
        "name": "id",
        "description": "unique ID of debug array, used to discriminate between arrays",
        "units": null,
        "default_value": null
      },
      "name": {
        "type": "char[10]",
        "name": "name",
        "description": "name of the debug array",
        "units": "max. 10 characters",
        "default_value": null
      },
      "data": {
        "type": "float32[58]",
        "name": "data",
        "description": "data",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_px4_mavlink_debug",
        "name": "px4_mavlink_debug",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_debug_key_value": {
    "name": "debug_key_value",
    "description": "Contains debug key value data including key (max. 10 characters as key / name), value (the value to send as debug output).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "key": {
        "type": "char[10]",
        "name": "key",
        "description": "max. 10 characters as key / name",
        "units": null,
        "default_value": null
      },
      "value": {
        "type": "float32",
        "name": "value",
        "description": "the value to send as debug output",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_px4_mavlink_debug",
        "name": "px4_mavlink_debug",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_debug_value": {
    "name": "debug_value",
    "description": "Contains debug value data including ind (index of debug variable), value (the value to send as debug output).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "ind": {
        "type": "int8",
        "name": "ind",
        "description": "index of debug variable",
        "units": null,
        "default_value": null
      },
      "value": {
        "type": "float32",
        "name": "value",
        "description": "the value to send as debug output",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_px4_mavlink_debug",
        "name": "px4_mavlink_debug",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_debug_vect": {
    "name": "debug_vect",
    "description": "Contains debug vect data including name (max. 10 characters as key / name), x (x value), y (y value), and 1 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "name": {
        "type": "char[10]",
        "name": "name",
        "description": "max. 10 characters as key / name",
        "units": null,
        "default_value": null
      },
      "x": {
        "type": "float32",
        "name": "x",
        "description": "x value",
        "units": null,
        "default_value": null
      },
      "y": {
        "type": "float32",
        "name": "y",
        "description": "y value",
        "units": null,
        "default_value": null
      },
      "z": {
        "type": "float32",
        "name": "z",
        "description": "z value",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_px4_mavlink_debug",
        "name": "px4_mavlink_debug",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_attitude": {
    "name": "vehicle_attitude",
    "description": "This is similar to the mavlink message ATTITUDE_QUATERNION, but for onboard use. The quaternion uses the Hamilton convention, and the order is q(w, x, y, z)",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "the timestamp of the raw data",
        "units": "microseconds"
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "Quaternion rotation from the FRD body frame to the NED earth frame",
        "units": null
      },
      "delta_q_reset": {
        "type": "float32[4]",
        "name": "delta_q_reset",
        "description": "Amount by which quaternion has changed during last reset",
        "units": null
      },
      "quat_reset_counter": {
        "type": "uint8",
        "name": "quat_reset_counter",
        "description": "Quaternion reset counter",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_px4_simple_app",
        "name": "px4_simple_app",
        "type": "Module"
      },
      {
        "id": "m_attitude_estimator_q",
        "name": "attitude_estimator_q",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_lightware_sf45_serial",
        "name": "lightware_sf45_serial",
        "type": "Module"
      },
      {
        "id": "m_msp_osd",
        "name": "msp_osd",
        "type": "Module"
      },
      {
        "id": "m_crsf_rc",
        "name": "crsf_rc",
        "type": "Module"
      },
      {
        "id": "m_rc_input",
        "name": "rc_input",
        "type": "Module"
      },
      {
        "id": "m_bst",
        "name": "bst",
        "type": "Module"
      },
      {
        "id": "m_fake_magnetometer",
        "name": "fake_magnetometer",
        "type": "Module"
      },
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_attitude_estimator_q",
        "name": "attitude_estimator_q",
        "type": "Module"
      },
      {
        "id": "m_camera_feedback",
        "name": "camera_feedback",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_landing_target_estimator",
        "name": "landing_target_estimator",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      },
      {
        "id": "m_rover_mecanum",
        "name": "rover_mecanum",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_sensor_airspeed_sim",
        "name": "sensor_airspeed_sim",
        "type": "Module"
      },
      {
        "id": "m_uuv_att_control",
        "name": "uuv_att_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_pos_control",
        "name": "uuv_pos_control",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_thrust_setpoint": {
    "name": "vehicle_thrust_setpoint",
    "description": "TOPICS vehicle_thrust_setpoint\nTOPICS vehicle_thrust_setpoint_virtual_fw vehicle_thrust_setpoint_virtual_mc",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "timestamp of the data sample on which this message is based",
        "units": "microseconds",
        "default_value": null
      },
      "xyz": {
        "type": "float32[3]",
        "name": "xyz",
        "description": "thrust setpoint along X, Y, Z body axis [-1, 1]",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_airship_att_control",
        "name": "airship_att_control",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_att_control",
        "name": "uuv_att_control",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_control_allocator",
        "name": "control_allocator",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_torque_setpoint": {
    "name": "vehicle_torque_setpoint",
    "description": "TOPICS vehicle_torque_setpoint\nTOPICS vehicle_torque_setpoint_virtual_fw vehicle_torque_setpoint_virtual_mc",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "timestamp of the data sample on which this message is based",
        "units": "microseconds",
        "default_value": null
      },
      "xyz": {
        "type": "float32[3]",
        "name": "xyz",
        "description": "torque setpoint about X, Y, Z body axis",
        "units": "normalized",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_airship_att_control",
        "name": "airship_att_control",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_att_control",
        "name": "uuv_att_control",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_control_allocator",
        "name": "control_allocator",
        "type": "Module"
      },
      {
        "id": "m_mc_autotune_attitude_control",
        "name": "mc_autotune_attitude_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_airspeed_validated": {
    "name": "airspeed_validated",
    "description": "Contains airspeed validated data including indicated_airspeed_m_s (indicated airspeed in m/s , set to nan if invalid), calibrated_airspeed_m_s (calibrated airspeed in m/s , set to nan if invalid), true_airspeed_m_s (true filtered airspeed in m/s , set to nan if invalid), and 7 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "indicated_airspeed_m_s": {
        "type": "float32",
        "name": "indicated_airspeed_m_s",
        "description": "indicated airspeed in m/s , set to NAN if invalid",
        "units": "IAS",
        "default_value": null
      },
      "calibrated_airspeed_m_s": {
        "type": "float32",
        "name": "calibrated_airspeed_m_s",
        "description": "calibrated airspeed in m/s , set to NAN if invalid",
        "units": "CAS, accounts for instrumentation errors",
        "default_value": null
      },
      "true_airspeed_m_s": {
        "type": "float32",
        "name": "true_airspeed_m_s",
        "description": "true filtered airspeed in m/s , set to NAN if invalid",
        "units": "TAS",
        "default_value": null
      },
      "calibrated_ground_minus_wind_m_s": {
        "type": "float32",
        "name": "calibrated_ground_minus_wind_m_s",
        "description": "CAS calculated from groundspeed - windspeed, where windspeed is estimated based on a zero-sideslip assumption, set to NAN if invalid",
        "units": null,
        "default_value": null
      },
      "true_ground_minus_wind_m_s": {
        "type": "float32",
        "name": "true_ground_minus_wind_m_s",
        "description": "TAS calculated from groundspeed - windspeed, where windspeed is estimated based on a zero-sideslip assumption, set to NAN if invalid",
        "units": null,
        "default_value": null
      },
      "airspeed_sensor_measurement_valid": {
        "type": "bool",
        "name": "airspeed_sensor_measurement_valid",
        "description": "True if data from at least one airspeed sensor is declared valid.",
        "units": null,
        "default_value": null
      },
      "selected_airspeed_index": {
        "type": "int8",
        "name": "selected_airspeed_index",
        "description": "1-3: airspeed sensor index, 0: groundspeed-windspeed, -1: airspeed invalid",
        "units": null,
        "default_value": null
      },
      "airspeed_derivative_filtered": {
        "type": "float32",
        "name": "airspeed_derivative_filtered",
        "description": "filtered indicated airspeed derivative [m/s/s]",
        "units": null,
        "default_value": null
      },
      "throttle_filtered": {
        "type": "float32",
        "name": "throttle_filtered",
        "description": "filtered fixed-wing throttle [-]",
        "units": null,
        "default_value": null
      },
      "pitch_filtered": {
        "type": "float32",
        "name": "pitch_filtered",
        "description": "filtered pitch [rad]",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_msp_osd",
        "name": "msp_osd",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_camera_capture": {
    "name": "camera_capture",
    "description": "Contains camera capture data including timestamp_utc (capture time in utc / gps time), seq (image sequence number), lat (latitude in degrees), and 5 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_utc": {
        "type": "uint64",
        "name": "timestamp_utc",
        "description": "Capture time in UTC / GPS time",
        "units": null,
        "default_value": null
      },
      "seq": {
        "type": "uint32",
        "name": "seq",
        "description": "Image sequence number",
        "units": null,
        "default_value": null
      },
      "lat": {
        "type": "float64",
        "name": "lat",
        "description": "Latitude in degrees",
        "units": "WGS84",
        "default_value": null
      },
      "lon": {
        "type": "float64",
        "name": "lon",
        "description": "Longitude in degrees",
        "units": "WGS84",
        "default_value": null
      },
      "alt": {
        "type": "float32",
        "name": "alt",
        "description": "Altitude",
        "units": "AMSL",
        "default_value": null
      },
      "ground_distance": {
        "type": "float32",
        "name": "ground_distance",
        "description": "Altitude above ground",
        "units": "meters",
        "default_value": null
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "Attitude of the camera relative to NED earth-fixed frame when using a gimbal, otherwise vehicle attitude",
        "units": null,
        "default_value": null
      },
      "result": {
        "type": "int8",
        "name": "result",
        "description": "1 for success, 0 for failure, -1 if camera does not provide feedback",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_camera_feedback",
        "name": "camera_feedback",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_power_button_state": {
    "name": "power_button_state",
    "description": "power button state notification message",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "event": {
        "type": "uint8",
        "name": "event",
        "description": "one of PWR_BUTTON_STATE_*",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_status": {
    "name": "vehicle_status",
    "description": "Encodes the system state of the vehicle published by commander",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "nav_state": {
        "type": "uint8",
        "name": "nav_state",
        "description": "Currently active mode",
        "units": null
      },
      "arming_state": {
        "type": "uint8",
        "name": "arming_state",
        "description": "Current arming state",
        "units": null
      },
      "failsafe": {
        "type": "bool",
        "name": "failsafe",
        "description": "true if system is in failsafe state",
        "units": null
      },
      "vehicle_type": {
        "type": "uint8",
        "name": "vehicle_type",
        "description": "Type of vehicle (rotary wing, fixed wing, etc)",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_lightware_laser_i2c",
        "name": "lightware_laser_i2c",
        "type": "Module"
      },
      {
        "id": "m_atxxxx",
        "name": "atxxxx",
        "type": "Module"
      },
      {
        "id": "m_msp_osd",
        "name": "msp_osd",
        "type": "Module"
      },
      {
        "id": "m_px4io",
        "name": "px4io",
        "type": "Module"
      },
      {
        "id": "m_crsf_rc",
        "name": "crsf_rc",
        "type": "Module"
      },
      {
        "id": "m_dsm_rc",
        "name": "dsm_rc",
        "type": "Module"
      },
      {
        "id": "m_rc_input",
        "name": "rc_input",
        "type": "Module"
      },
      {
        "id": "m_frsky_telemetry",
        "name": "frsky_telemetry",
        "type": "Module"
      },
      {
        "id": "m_sagetech_mxs",
        "name": "sagetech_mxs",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_work_item_example",
        "name": "work_item_example",
        "type": "Module"
      },
      {
        "id": "m_airship_att_control",
        "name": "airship_att_control",
        "type": "Module"
      },
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_battery_status",
        "name": "battery_status",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_control_allocator",
        "name": "control_allocator",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_send_event",
        "name": "send_event",
        "type": "Module"
      },
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      },
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_fw_autotune_attitude_control",
        "name": "fw_autotune_attitude_control",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_gyro_calibration",
        "name": "gyro_calibration",
        "type": "Module"
      },
      {
        "id": "m_internal_combustion_engine_control",
        "name": "internal_combustion_engine_control",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_logger",
        "name": "logger",
        "type": "Module"
      },
      {
        "id": "m_mag_bias_estimator",
        "name": "mag_bias_estimator",
        "type": "Module"
      },
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      },
      {
        "id": "m_mc_autotune_attitude_control",
        "name": "mc_autotune_attitude_control",
        "type": "Module"
      },
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      },
      {
        "id": "m_rover_mecanum",
        "name": "rover_mecanum",
        "type": "Module"
      },
      {
        "id": "m_battery_simulator",
        "name": "battery_simulator",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      },
      {
        "id": "m_i2c_launcher",
        "name": "i2c_launcher",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_home_position": {
    "name": "home_position",
    "description": "Contains home position information for the vehicle.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "x": {
        "type": "float",
        "name": "x",
        "description": "North position in NED earth-fixed frame",
        "units": "m"
      },
      "y": {
        "type": "float",
        "name": "y",
        "description": "East position in NED earth-fixed frame",
        "units": "m"
      },
      "z": {
        "type": "float",
        "name": "z",
        "description": "Down position in NED earth-fixed frame",
        "units": "m"
      },
      "lat": {
        "type": "double",
        "name": "lat",
        "description": "Latitude of home position",
        "units": "deg"
      },
      "lon": {
        "type": "double",
        "name": "lon",
        "description": "Longitude of home position",
        "units": "deg"
      },
      "alt": {
        "type": "float",
        "name": "alt",
        "description": "Altitude of home position",
        "units": "m"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_msp_osd",
        "name": "msp_osd",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_failure_detector_status": {
    "name": "failure_detector_status",
    "description": "FailureDetector status",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "fd_roll": {
        "type": "bool",
        "name": "fd_roll",
        "description": "",
        "units": null,
        "default_value": null
      },
      "fd_pitch": {
        "type": "bool",
        "name": "fd_pitch",
        "description": "",
        "units": null,
        "default_value": null
      },
      "fd_alt": {
        "type": "bool",
        "name": "fd_alt",
        "description": "",
        "units": null,
        "default_value": null
      },
      "fd_ext": {
        "type": "bool",
        "name": "fd_ext",
        "description": "",
        "units": null,
        "default_value": null
      },
      "fd_arm_escs": {
        "type": "bool",
        "name": "fd_arm_escs",
        "description": "",
        "units": null,
        "default_value": null
      },
      "fd_battery": {
        "type": "bool",
        "name": "fd_battery",
        "description": "",
        "units": null,
        "default_value": null
      },
      "fd_imbalanced_prop": {
        "type": "bool",
        "name": "fd_imbalanced_prop",
        "description": "",
        "units": null,
        "default_value": null
      },
      "fd_motor": {
        "type": "bool",
        "name": "fd_motor",
        "description": "",
        "units": null,
        "default_value": null
      },
      "imbalanced_prop_metric": {
        "type": "float32",
        "name": "imbalanced_prop_metric",
        "description": "Metric of the imbalanced propeller check",
        "units": "low-passed",
        "default_value": null
      },
      "motor_failure_mask": {
        "type": "uint16",
        "name": "motor_failure_mask",
        "description": "Bit-mask with motor indices, indicating critical motor failures",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_control_allocator",
        "name": "control_allocator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_control_mode": {
    "name": "vehicle_control_mode",
    "description": "Control mode flags that indicate which controllers are active and what they are controlling",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "flag_armed": {
        "type": "bool",
        "name": "flag_armed",
        "description": "synonym for actuator_armed.armed",
        "units": null
      },
      "flag_control_manual_enabled": {
        "type": "bool",
        "name": "flag_control_manual_enabled",
        "description": "true if manual input is mixed in",
        "units": null
      },
      "flag_control_auto_enabled": {
        "type": "bool",
        "name": "flag_control_auto_enabled",
        "description": "true if onboard autopilot should act",
        "units": null
      },
      "flag_control_position_enabled": {
        "type": "bool",
        "name": "flag_control_position_enabled",
        "description": "true if position is controlled",
        "units": null
      },
      "flag_control_velocity_enabled": {
        "type": "bool",
        "name": "flag_control_velocity_enabled",
        "description": "true if horizontal velocity is controlled",
        "units": null
      },
      "flag_control_altitude_enabled": {
        "type": "bool",
        "name": "flag_control_altitude_enabled",
        "description": "true if altitude is controlled",
        "units": null
      },
      "flag_control_attitude_enabled": {
        "type": "bool",
        "name": "flag_control_attitude_enabled",
        "description": "true if attitude stabilization is mixed in",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_voxl_esc",
        "name": "voxl_esc",
        "type": "Module"
      },
      {
        "id": "m_control_allocator",
        "name": "control_allocator",
        "type": "Module"
      },
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      },
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      },
      {
        "id": "m_mc_pos_control",
        "name": "mc_pos_control",
        "type": "Module"
      },
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      },
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      },
      {
        "id": "m_rover_differential",
        "name": "rover_differential",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      },
      {
        "id": "m_uuv_att_control",
        "name": "uuv_att_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_pos_control",
        "name": "uuv_pos_control",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_actuator_test": {
    "name": "actuator_test",
    "description": "Topic to test individual actuator output functions\n0 to center servos or minimum motor thrust,\n-1 maximum negative (if not supported by the motors, <0 maps to NaN),\nand NaN maps to disarmed (stop the motors)",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "action": {
        "type": "uint8",
        "name": "action",
        "description": "one of ACTION_*",
        "units": null,
        "default_value": null
      },
      "function": {
        "type": "uint16",
        "name": "function",
        "description": "actuator output function",
        "units": null,
        "default_value": null
      },
      "value": {
        "type": "float32",
        "name": "value",
        "description": "range: [-1, 1], where 1 means maximum positive output,",
        "units": null,
        "default_value": null
      },
      "timeout_ms": {
        "type": "uint32",
        "name": "timeout_ms",
        "description": "timeout in ms after which to exit test mode",
        "units": "if 0, do not time out",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_actuator_test",
        "name": "actuator_test",
        "type": "Module"
      },
      {
        "id": "m_io_bypass_control",
        "name": "io_bypass_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_vertiq_io",
        "name": "vertiq_io",
        "type": "Module"
      },
      {
        "id": "m_voxl_esc",
        "name": "voxl_esc",
        "type": "Module"
      },
      {
        "id": "m_cyphal",
        "name": "cyphal",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_register_ext_component_reply": {
    "name": "register_ext_component_reply",
    "description": "Contains register ext component reply information for the vehicle.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_control_allocator_status": {
    "name": "control_allocator_status",
    "description": "Computed as: unallocated_torque = torque_setpoint - allocated_torque\nComputed as: unallocated_thrust = thrust_setpoint - allocated_thrust\nNote 1: actuator saturation does not necessarily imply that the thrust setpoint or the torque setpoint were not achieved.\nNote 2: an actuator with limited dynamics can be indicated as upper-saturated even if it as not reached its maximum value.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "torque_setpoint_achieved": {
        "type": "bool",
        "name": "torque_setpoint_achieved",
        "description": "Boolean indicating whether the 3D torque setpoint was correctly allocated to actuators. 0 if not achieved, 1 if achieved.",
        "units": null,
        "default_value": null
      },
      "unallocated_torque": {
        "type": "float32[3]",
        "name": "unallocated_torque",
        "description": "Unallocated torque. Equal to 0 if the setpoint was achieved.",
        "units": null,
        "default_value": null
      },
      "thrust_setpoint_achieved": {
        "type": "bool",
        "name": "thrust_setpoint_achieved",
        "description": "Boolean indicating whether the 3D thrust setpoint was correctly allocated to actuators. 0 if not achieved, 1 if achieved.",
        "units": null,
        "default_value": null
      },
      "unallocated_thrust": {
        "type": "float32[3]",
        "name": "unallocated_thrust",
        "description": "Unallocated thrust. Equal to 0 if the setpoint was achieved.",
        "units": null,
        "default_value": null
      },
      "actuator_saturation": {
        "type": "int8[16]",
        "name": "actuator_saturation",
        "description": "Indicates actuator saturation status.",
        "units": null,
        "default_value": null
      },
      "handled_motor_failure_mask": {
        "type": "uint16",
        "name": "handled_motor_failure_mask",
        "description": "Bitmask of failed motors that were removed from the allocation / effectiveness matrix. Not necessarily identical to the report from FailureDetector",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_control_allocator",
        "name": "control_allocator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_estimator_sensor_bias": {
    "name": "estimator_sensor_bias",
    "description": "\nSensor readings and in-run biases in SI-unit form. Sensor readings are compensated for static offsets,\nscale errors, in-run bias and thermal drift (if thermal compensation is enabled and available).\n\nIn-run bias estimates (subtract from uncorrected data)",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "the timestamp of the raw data",
        "units": "microseconds",
        "default_value": null
      },
      "gyro_device_id": {
        "type": "uint32",
        "name": "gyro_device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "gyro_bias": {
        "type": "float32[3]",
        "name": "gyro_bias",
        "description": "gyroscope in-run bias in body frame",
        "units": "rad/s",
        "default_value": null
      },
      "gyro_bias_limit": {
        "type": "float32",
        "name": "gyro_bias_limit",
        "description": "magnitude of maximum gyroscope in-run bias in body frame",
        "units": "rad/s",
        "default_value": null
      },
      "gyro_bias_variance": {
        "type": "float32[3]",
        "name": "gyro_bias_variance",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_bias_valid": {
        "type": "bool",
        "name": "gyro_bias_valid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_bias_stable": {
        "type": "bool",
        "name": "gyro_bias_stable",
        "description": "true when the gyro bias estimate is stable enough to use for calibration",
        "units": null,
        "default_value": null
      },
      "accel_device_id": {
        "type": "uint32",
        "name": "accel_device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "accel_bias": {
        "type": "float32[3]",
        "name": "accel_bias",
        "description": "accelerometer in-run bias in body frame",
        "units": "m/s^2",
        "default_value": null
      },
      "accel_bias_limit": {
        "type": "float32",
        "name": "accel_bias_limit",
        "description": "magnitude of maximum accelerometer in-run bias in body frame",
        "units": "m/s^2",
        "default_value": null
      },
      "accel_bias_variance": {
        "type": "float32[3]",
        "name": "accel_bias_variance",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_bias_valid": {
        "type": "bool",
        "name": "accel_bias_valid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_bias_stable": {
        "type": "bool",
        "name": "accel_bias_stable",
        "description": "true when the accel bias estimate is stable enough to use for calibration",
        "units": null,
        "default_value": null
      },
      "mag_device_id": {
        "type": "uint32",
        "name": "mag_device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "mag_bias": {
        "type": "float32[3]",
        "name": "mag_bias",
        "description": "magnetometer in-run bias in body frame",
        "units": "Gauss",
        "default_value": null
      },
      "mag_bias_limit": {
        "type": "float32",
        "name": "mag_bias_limit",
        "description": "magnitude of maximum magnetometer in-run bias in body frame",
        "units": "Gauss",
        "default_value": null
      },
      "mag_bias_variance": {
        "type": "float32[3]",
        "name": "mag_bias_variance",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_bias_valid": {
        "type": "bool",
        "name": "mag_bias_valid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_bias_stable": {
        "type": "bool",
        "name": "mag_bias_stable",
        "description": "true when the mag bias estimate is stable enough to use for calibration",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_estimator_selector_status": {
    "name": "estimator_selector_status",
    "description": "Contains estimator selector status data including primary_instance (), instances_available (), instance_changed_count (), and 12 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "primary_instance": {
        "type": "uint8",
        "name": "primary_instance",
        "description": "",
        "units": null,
        "default_value": null
      },
      "instances_available": {
        "type": "uint8",
        "name": "instances_available",
        "description": "",
        "units": null,
        "default_value": null
      },
      "instance_changed_count": {
        "type": "uint32",
        "name": "instance_changed_count",
        "description": "",
        "units": null,
        "default_value": null
      },
      "last_instance_change": {
        "type": "uint64",
        "name": "last_instance_change",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_device_id": {
        "type": "uint32",
        "name": "accel_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "baro_device_id": {
        "type": "uint32",
        "name": "baro_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_device_id": {
        "type": "uint32",
        "name": "gyro_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_device_id": {
        "type": "uint32",
        "name": "mag_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "combined_test_ratio": {
        "type": "float32[9]",
        "name": "combined_test_ratio",
        "description": "",
        "units": null,
        "default_value": null
      },
      "relative_test_ratio": {
        "type": "float32[9]",
        "name": "relative_test_ratio",
        "description": "",
        "units": null,
        "default_value": null
      },
      "healthy": {
        "type": "bool[9]",
        "name": "healthy",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accumulated_gyro_error": {
        "type": "float32[4]",
        "name": "accumulated_gyro_error",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accumulated_accel_error": {
        "type": "float32[4]",
        "name": "accumulated_accel_error",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_fault_detected": {
        "type": "bool",
        "name": "gyro_fault_detected",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_fault_detected": {
        "type": "bool",
        "name": "accel_fault_detected",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_odometry": {
    "name": "vehicle_odometry",
    "description": "Contains vehicle odometry information for the vehicle.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "vx": {
        "type": "float",
        "name": "vx",
        "description": "Velocity in North direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "vy": {
        "type": "float",
        "name": "vy",
        "description": "Velocity in East direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "vz": {
        "type": "float",
        "name": "vz",
        "description": "Velocity in Down direction in NED earth-fixed frame",
        "units": "m/s"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_global_position": {
    "name": "vehicle_global_position",
    "description": "Contains vehicle global position information for the vehicle.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "lat": {
        "type": "double",
        "name": "lat",
        "description": "Latitude in degrees",
        "units": "deg"
      },
      "lon": {
        "type": "double",
        "name": "lon",
        "description": "Longitude in degrees",
        "units": "deg"
      },
      "alt": {
        "type": "float",
        "name": "alt",
        "description": "Altitude AMSL in meters",
        "units": "m"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_msp_osd",
        "name": "msp_osd",
        "type": "Module"
      },
      {
        "id": "m_frsky_telemetry",
        "name": "frsky_telemetry",
        "type": "Module"
      },
      {
        "id": "m_camera_feedback",
        "name": "camera_feedback",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_wind": {
    "name": "wind",
    "description": "TOPICS wind estimator_wind",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "the timestamp of the raw data",
        "units": "microseconds",
        "default_value": null
      },
      "windspeed_north": {
        "type": "float32",
        "name": "windspeed_north",
        "description": "Wind component in north / X direction",
        "units": "m/sec",
        "default_value": null
      },
      "windspeed_east": {
        "type": "float32",
        "name": "windspeed_east",
        "description": "Wind component in east / Y direction",
        "units": "m/sec",
        "default_value": null
      },
      "variance_north": {
        "type": "float32",
        "name": "variance_north",
        "description": "Wind estimate error variance in north / X direction **2 - set to zero (no uncertainty) if not estimated",
        "units": "m/sec",
        "default_value": null
      },
      "variance_east": {
        "type": "float32",
        "name": "variance_east",
        "description": "Wind estimate error variance in east / Y direction **2 - set to zero (no uncertainty) if not estimated",
        "units": "m/sec",
        "default_value": null
      },
      "tas_innov": {
        "type": "float32",
        "name": "tas_innov",
        "description": "True airspeed innovation",
        "units": null,
        "default_value": null
      },
      "tas_innov_var": {
        "type": "float32",
        "name": "tas_innov_var",
        "description": "True airspeed innovation variance",
        "units": null,
        "default_value": null
      },
      "beta_innov": {
        "type": "float32",
        "name": "beta_innov",
        "description": "Sideslip measurement innovation",
        "units": null,
        "default_value": null
      },
      "beta_innov_var": {
        "type": "float32",
        "name": "beta_innov_var",
        "description": "Sideslip measurement innovation variance",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_local_position": {
    "name": "vehicle_local_position",
    "description": "Contains vehicle local position information for the vehicle.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "x": {
        "type": "float",
        "name": "x",
        "description": "North position in NED earth-fixed frame",
        "units": "m"
      },
      "y": {
        "type": "float",
        "name": "y",
        "description": "East position in NED earth-fixed frame",
        "units": "m"
      },
      "z": {
        "type": "float",
        "name": "z",
        "description": "Down position in NED earth-fixed frame",
        "units": "m"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_camera_trigger",
        "name": "camera_trigger",
        "type": "Module"
      },
      {
        "id": "m_atxxxx",
        "name": "atxxxx",
        "type": "Module"
      },
      {
        "id": "m_msp_osd",
        "name": "msp_osd",
        "type": "Module"
      },
      {
        "id": "m_frsky_telemetry",
        "name": "frsky_telemetry",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_attitude_estimator_q",
        "name": "attitude_estimator_q",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      },
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_landing_target_estimator",
        "name": "landing_target_estimator",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      },
      {
        "id": "m_mc_pos_control",
        "name": "mc_pos_control",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      },
      {
        "id": "m_rover_mecanum",
        "name": "rover_mecanum",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_pos_control",
        "name": "uuv_pos_control",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      },
      {
        "id": "m_microbench",
        "name": "microbench",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_constraints": {
    "name": "vehicle_constraints",
    "description": "Local setpoint constraints in NED frame\nsetting something to NaN means that no limit is provided",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "speed_up": {
        "type": "float32",
        "name": "speed_up",
        "description": "in meters/sec",
        "units": null,
        "default_value": null
      },
      "speed_down": {
        "type": "float32",
        "name": "speed_down",
        "description": "in meters/sec",
        "units": null,
        "default_value": null
      },
      "want_takeoff": {
        "type": "bool",
        "name": "want_takeoff",
        "description": "tell the controller to initiate takeoff when idling",
        "units": "ignored during flight",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mc_pos_control",
        "name": "mc_pos_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_trajectory_setpoint": {
    "name": "trajectory_setpoint",
    "description": "Contains setpoint values for the control system to follow.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      },
      {
        "id": "m_mc_pos_control",
        "name": "mc_pos_control",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_pos_control",
        "name": "uuv_pos_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_rates_setpoint": {
    "name": "vehicle_rates_setpoint",
    "description": "Contains setpoint values for the control system to follow.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      },
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_att_control",
        "name": "uuv_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_autotune_attitude_control_status": {
    "name": "autotune_attitude_control_status",
    "description": "Contains autotune attitude control status data including coeff (coefficients of the identified discrete-time model), coeff_var (coefficients' variance of the identified discrete-time model), fitness (fitness of the parameter estimate), and 11 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "coeff": {
        "type": "float32[5]",
        "name": "coeff",
        "description": "coefficients of the identified discrete-time model",
        "units": null,
        "default_value": null
      },
      "coeff_var": {
        "type": "float32[5]",
        "name": "coeff_var",
        "description": "coefficients' variance of the identified discrete-time model",
        "units": null,
        "default_value": null
      },
      "fitness": {
        "type": "float32",
        "name": "fitness",
        "description": "fitness of the parameter estimate",
        "units": null,
        "default_value": null
      },
      "innov": {
        "type": "float32",
        "name": "innov",
        "description": "",
        "units": null,
        "default_value": null
      },
      "dt_model": {
        "type": "float32",
        "name": "dt_model",
        "description": "",
        "units": null,
        "default_value": null
      },
      "kc": {
        "type": "float32",
        "name": "kc",
        "description": "",
        "units": null,
        "default_value": null
      },
      "ki": {
        "type": "float32",
        "name": "ki",
        "description": "",
        "units": null,
        "default_value": null
      },
      "kd": {
        "type": "float32",
        "name": "kd",
        "description": "",
        "units": null,
        "default_value": null
      },
      "kff": {
        "type": "float32",
        "name": "kff",
        "description": "",
        "units": null,
        "default_value": null
      },
      "att_p": {
        "type": "float32",
        "name": "att_p",
        "description": "",
        "units": null,
        "default_value": null
      },
      "rate_sp": {
        "type": "float32[3]",
        "name": "rate_sp",
        "description": "",
        "units": null,
        "default_value": null
      },
      "u_filt": {
        "type": "float32",
        "name": "u_filt",
        "description": "",
        "units": null,
        "default_value": null
      },
      "y_filt": {
        "type": "float32",
        "name": "y_filt",
        "description": "",
        "units": null,
        "default_value": null
      },
      "state": {
        "type": "uint8",
        "name": "state",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_autotune_attitude_control",
        "name": "fw_autotune_attitude_control",
        "type": "Module"
      },
      {
        "id": "m_mc_autotune_attitude_control",
        "name": "mc_autotune_attitude_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_position_controller_landing_status": {
    "name": "position_controller_landing_status",
    "description": "abort status is:\n0 if not aborted\n>0 if aborted, with the singular abort criterion which triggered the landing abort enumerated by the following abort reasons\nabort reasons\nafter the manual operator abort, corresponds to individual bits of param FW_LND_ABORT",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "[us] time since system start",
        "units": null,
        "default_value": null
      },
      "lateral_touchdown_offset": {
        "type": "float32",
        "name": "lateral_touchdown_offset",
        "description": "[m] lateral touchdown position offset manually commanded during landing",
        "units": null,
        "default_value": null
      },
      "flaring": {
        "type": "bool",
        "name": "flaring",
        "description": "true if the aircraft is flaring",
        "units": null,
        "default_value": null
      },
      "abort_status": {
        "type": "uint8",
        "name": "abort_status",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_local_position_setpoint": {
    "name": "vehicle_local_position_setpoint",
    "description": "Local position setpoint in NED frame\nTelemetry of PID position controller to monitor tracking.\nNaN means the state was not controlled",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "x": {
        "type": "float32",
        "name": "x",
        "description": "in meters NED",
        "units": null,
        "default_value": null
      },
      "y": {
        "type": "float32",
        "name": "y",
        "description": "in meters NED",
        "units": null,
        "default_value": null
      },
      "z": {
        "type": "float32",
        "name": "z",
        "description": "in meters NED",
        "units": null,
        "default_value": null
      },
      "vx": {
        "type": "float32",
        "name": "vx",
        "description": "in meters/sec",
        "units": null,
        "default_value": null
      },
      "vy": {
        "type": "float32",
        "name": "vy",
        "description": "in meters/sec",
        "units": null,
        "default_value": null
      },
      "vz": {
        "type": "float32",
        "name": "vz",
        "description": "in meters/sec",
        "units": null,
        "default_value": null
      },
      "acceleration": {
        "type": "float32[3]",
        "name": "acceleration",
        "description": "in meters/sec^2",
        "units": null,
        "default_value": null
      },
      "thrust": {
        "type": "float32[3]",
        "name": "thrust",
        "description": "normalized thrust vector in NED",
        "units": null,
        "default_value": null
      },
      "yaw": {
        "type": "float32",
        "name": "yaw",
        "description": "in radians NED -PI..+PI",
        "units": null,
        "default_value": null
      },
      "yawspeed": {
        "type": "float32",
        "name": "yawspeed",
        "description": "in radians/sec",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_mc_pos_control",
        "name": "mc_pos_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_position_controller_status": {
    "name": "position_controller_status",
    "description": "Contains position controller status data including nav_roll (roll setpoint [rad]), nav_pitch (pitch setpoint [rad]), nav_bearing (bearing angle[rad]), and 5 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "nav_roll": {
        "type": "float32",
        "name": "nav_roll",
        "description": "Roll setpoint [rad]",
        "units": null,
        "default_value": null
      },
      "nav_pitch": {
        "type": "float32",
        "name": "nav_pitch",
        "description": "Pitch setpoint [rad]",
        "units": null,
        "default_value": null
      },
      "nav_bearing": {
        "type": "float32",
        "name": "nav_bearing",
        "description": "Bearing angle[rad]",
        "units": null,
        "default_value": null
      },
      "target_bearing": {
        "type": "float32",
        "name": "target_bearing",
        "description": "Bearing angle from aircraft to current target [rad]",
        "units": null,
        "default_value": null
      },
      "xtrack_error": {
        "type": "float32",
        "name": "xtrack_error",
        "description": "Signed track error [m]",
        "units": null,
        "default_value": null
      },
      "wp_dist": {
        "type": "float32",
        "name": "wp_dist",
        "description": "Distance to active  waypoint [m]",
        "units": "next",
        "default_value": null
      },
      "acceptance_radius": {
        "type": "float32",
        "name": "acceptance_radius",
        "description": "Current horizontal acceptance radius [m]",
        "units": null,
        "default_value": null
      },
      "type": {
        "type": "uint8",
        "name": "type",
        "description": "Current  position setpoint type (see PositionSetpoint.msg)",
        "units": "applied",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_figure_eight_status": {
    "name": "figure_eight_status",
    "description": "Contains figure eight status data including major_radius (major axis radius of the figure eight [m]. positive values orbit clockwise, negative values orbit counter-clockwise), minor_radius (minor axis radius of the figure eight [m]), orientation (orientation of the major axis of the figure eight [rad]), and 2 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "major_radius": {
        "type": "float32",
        "name": "major_radius",
        "description": "Major axis radius of the figure eight [m]. Positive values orbit clockwise, negative values orbit counter-clockwise.",
        "units": null,
        "default_value": null
      },
      "minor_radius": {
        "type": "float32",
        "name": "minor_radius",
        "description": "Minor axis radius of the figure eight [m].",
        "units": null,
        "default_value": null
      },
      "orientation": {
        "type": "float32",
        "name": "orientation",
        "description": "Orientation of the major axis of the figure eight [rad].",
        "units": null,
        "default_value": null
      },
      "frame": {
        "type": "uint8",
        "name": "frame",
        "description": "The coordinate system of the fields: x, y, z.",
        "units": null,
        "default_value": null
      },
      "z": {
        "type": "float32",
        "name": "z",
        "description": "Altitude of center point. Coordinate system depends on frame field.",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_tecs_status": {
    "name": "tecs_status",
    "description": "Contains tecs status data including altitude_sp (altitude setpoint amsl [m]), altitude_reference (altitude setpoint reference amsl [m]), altitude_time_constant (time constant of the altitude tracker [s]), and 21 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "altitude_sp": {
        "type": "float32",
        "name": "altitude_sp",
        "description": "Altitude setpoint AMSL [m]",
        "units": null,
        "default_value": null
      },
      "altitude_reference": {
        "type": "float32",
        "name": "altitude_reference",
        "description": "Altitude setpoint reference AMSL [m]",
        "units": null,
        "default_value": null
      },
      "altitude_time_constant": {
        "type": "float32",
        "name": "altitude_time_constant",
        "description": "Time constant of the altitude tracker [s]",
        "units": null,
        "default_value": null
      },
      "height_rate_reference": {
        "type": "float32",
        "name": "height_rate_reference",
        "description": "Height rate setpoint reference [m/s]",
        "units": null,
        "default_value": null
      },
      "height_rate_direct": {
        "type": "float32",
        "name": "height_rate_direct",
        "description": "Direct height rate setpoint from velocity reference generator [m/s]",
        "units": null,
        "default_value": null
      },
      "height_rate_setpoint": {
        "type": "float32",
        "name": "height_rate_setpoint",
        "description": "Height rate setpoint [m/s]",
        "units": null,
        "default_value": null
      },
      "height_rate": {
        "type": "float32",
        "name": "height_rate",
        "description": "Height rate [m/s]",
        "units": null,
        "default_value": null
      },
      "equivalent_airspeed_sp": {
        "type": "float32",
        "name": "equivalent_airspeed_sp",
        "description": "Equivalent airspeed setpoint [m/s]",
        "units": null,
        "default_value": null
      },
      "true_airspeed_sp": {
        "type": "float32",
        "name": "true_airspeed_sp",
        "description": "True airspeed setpoint [m/s]",
        "units": null,
        "default_value": null
      },
      "true_airspeed_filtered": {
        "type": "float32",
        "name": "true_airspeed_filtered",
        "description": "True airspeed filtered [m/s]",
        "units": null,
        "default_value": null
      },
      "true_airspeed_derivative_sp": {
        "type": "float32",
        "name": "true_airspeed_derivative_sp",
        "description": "True airspeed derivative setpoint [m/s^2]",
        "units": null,
        "default_value": null
      },
      "true_airspeed_derivative": {
        "type": "float32",
        "name": "true_airspeed_derivative",
        "description": "True airspeed derivative [m/s^2]",
        "units": null,
        "default_value": null
      },
      "true_airspeed_derivative_raw": {
        "type": "float32",
        "name": "true_airspeed_derivative_raw",
        "description": "True airspeed derivative raw [m/s^2]",
        "units": null,
        "default_value": null
      },
      "total_energy_rate_sp": {
        "type": "float32",
        "name": "total_energy_rate_sp",
        "description": "Total energy rate setpoint [m^2/s^3]",
        "units": null,
        "default_value": null
      },
      "total_energy_rate": {
        "type": "float32",
        "name": "total_energy_rate",
        "description": "Total energy rate estimate [m^2/s^3]",
        "units": null,
        "default_value": null
      },
      "total_energy_balance_rate_sp": {
        "type": "float32",
        "name": "total_energy_balance_rate_sp",
        "description": "Energy balance rate setpoint [m^2/s^3]",
        "units": null,
        "default_value": null
      },
      "total_energy_balance_rate": {
        "type": "float32",
        "name": "total_energy_balance_rate",
        "description": "Energy balance rate estimate [m^2/s^3]",
        "units": null,
        "default_value": null
      },
      "throttle_integ": {
        "type": "float32",
        "name": "throttle_integ",
        "description": "Throttle integrator value [-]",
        "units": null,
        "default_value": null
      },
      "pitch_integ": {
        "type": "float32",
        "name": "pitch_integ",
        "description": "Pitch integrator value [rad]",
        "units": null,
        "default_value": null
      },
      "throttle_sp": {
        "type": "float32",
        "name": "throttle_sp",
        "description": "Current throttle setpoint [-]",
        "units": null,
        "default_value": null
      },
      "pitch_sp_rad": {
        "type": "float32",
        "name": "pitch_sp_rad",
        "description": "Current pitch setpoint [rad]",
        "units": null,
        "default_value": null
      },
      "throttle_trim": {
        "type": "float32",
        "name": "throttle_trim",
        "description": "estimated throttle value [0,1] required to fly level at equivalent_airspeed_sp in the current atmospheric conditions",
        "units": null,
        "default_value": null
      },
      "underspeed_ratio": {
        "type": "float32",
        "name": "underspeed_ratio",
        "description": "0: no underspeed, 1: maximal underspeed. Controller takes measures to avoid stall proportional to ratio if >0.",
        "units": null,
        "default_value": null
      },
      "fast_descend_ratio": {
        "type": "float32",
        "name": "fast_descend_ratio",
        "description": "value indicating if fast descend mode is enabled with ramp up and ramp down [0-1]",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_orbit_status": {
    "name": "orbit_status",
    "description": "ORBIT_YAW_BEHAVIOUR",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "radius": {
        "type": "float32",
        "name": "radius",
        "description": "Radius of the orbit circle. Positive values orbit clockwise, negative values orbit counter-clockwise. [m]",
        "units": null,
        "default_value": null
      },
      "frame": {
        "type": "uint8",
        "name": "frame",
        "description": "The coordinate system of the fields: x, y, z.",
        "units": null,
        "default_value": null
      },
      "z": {
        "type": "float32",
        "name": "z",
        "description": "Altitude of center point. Coordinate system depends on frame field.",
        "units": null,
        "default_value": null
      },
      "yaw_behaviour": {
        "type": "uint8",
        "name": "yaw_behaviour",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_launch_detection_status": {
    "name": "launch_detection_status",
    "description": "Status of the launch detection state machine (fixed-wing only)",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "launch_detection_state": {
        "type": "uint8",
        "name": "launch_detection_state",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_manager_information": {
    "name": "gimbal_manager_information",
    "description": "Contains gimbal manager information data including cap_flags (), gimbal_device_id (), roll_min ([rad]), and 5 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "cap_flags": {
        "type": "uint32",
        "name": "cap_flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gimbal_device_id": {
        "type": "uint8",
        "name": "gimbal_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "roll_min": {
        "type": "float32",
        "name": "roll_min",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "roll_max": {
        "type": "float32",
        "name": "roll_max",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "pitch_min": {
        "type": "float32",
        "name": "pitch_min",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "pitch_max": {
        "type": "float32",
        "name": "pitch_max",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "yaw_min": {
        "type": "float32",
        "name": "yaw_min",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "yaw_max": {
        "type": "float32",
        "name": "yaw_max",
        "description": "[rad]",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_device_attitude_status": {
    "name": "gimbal_device_attitude_status",
    "description": "Contains gimbal device attitude status data including target_system (), target_component (), device_flags (), and 9 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "target_system": {
        "type": "uint8",
        "name": "target_system",
        "description": "",
        "units": null,
        "default_value": null
      },
      "target_component": {
        "type": "uint8",
        "name": "target_component",
        "description": "",
        "units": null,
        "default_value": null
      },
      "device_flags": {
        "type": "uint16",
        "name": "device_flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_x": {
        "type": "float32",
        "name": "angular_velocity_x",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_y": {
        "type": "float32",
        "name": "angular_velocity_y",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_z": {
        "type": "float32",
        "name": "angular_velocity_z",
        "description": "",
        "units": null,
        "default_value": null
      },
      "failure_flags": {
        "type": "uint32",
        "name": "failure_flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "delta_yaw": {
        "type": "float32",
        "name": "delta_yaw",
        "description": "",
        "units": null,
        "default_value": null
      },
      "delta_yaw_velocity": {
        "type": "float32",
        "name": "delta_yaw_velocity",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gimbal_device_id": {
        "type": "uint8",
        "name": "gimbal_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "received_from_mavlink": {
        "type": "bool",
        "name": "received_from_mavlink",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_camera_feedback",
        "name": "camera_feedback",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_controls": {
    "name": "gimbal_controls",
    "description": "Contains gimbal controls data including control ().",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "the timestamp the data this control response is based on was sampled",
        "units": null,
        "default_value": null
      },
      "control": {
        "type": "float32[3]",
        "name": "control",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_manager_status": {
    "name": "gimbal_manager_status",
    "description": "Contains gimbal manager status data including flags (), gimbal_device_id (), primary_control_sysid (), and 3 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "flags": {
        "type": "uint32",
        "name": "flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gimbal_device_id": {
        "type": "uint8",
        "name": "gimbal_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "primary_control_sysid": {
        "type": "uint8",
        "name": "primary_control_sysid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "primary_control_compid": {
        "type": "uint8",
        "name": "primary_control_compid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "secondary_control_sysid": {
        "type": "uint8",
        "name": "secondary_control_sysid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "secondary_control_compid": {
        "type": "uint8",
        "name": "secondary_control_compid",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_device_set_attitude": {
    "name": "gimbal_device_set_attitude",
    "description": "Contains gimbal device set attitude data including target_system (), target_component (), flags (), and 4 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "target_system": {
        "type": "uint8",
        "name": "target_system",
        "description": "",
        "units": null,
        "default_value": null
      },
      "target_component": {
        "type": "uint8",
        "name": "target_component",
        "description": "",
        "units": null,
        "default_value": null
      },
      "flags": {
        "type": "uint16",
        "name": "flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_x": {
        "type": "float32",
        "name": "angular_velocity_x",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_y": {
        "type": "float32",
        "name": "angular_velocity_y",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_z": {
        "type": "float32",
        "name": "angular_velocity_z",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_mount_orientation": {
    "name": "mount_orientation",
    "description": "Contains mount orientation data including attitude_euler_angle (attitude/direction of the mount as euler angles in rad).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "attitude_euler_angle": {
        "type": "float32[3]",
        "name": "attitude_euler_angle",
        "description": "Attitude/direction of the mount as euler angles in rad",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_v1_command": {
    "name": "gimbal_v1_command",
    "description": "Contains command messages for vehicle actions.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "command": {
        "type": "uint16",
        "name": "command",
        "description": "Command ID",
        "units": null
      },
      "param1": {
        "type": "float",
        "name": "param1",
        "description": "Parameter 1",
        "units": null
      },
      "param2": {
        "type": "float",
        "name": "param2",
        "description": "Parameter 2",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_internal_combustion_engine_status": {
    "name": "internal_combustion_engine_status",
    "description": "Contains internal combustion engine status data including state (), flags (), engine_load_percent (engine load estimate, percent, [0, 127]), and 19 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "state": {
        "type": "uint8",
        "name": "state",
        "description": "",
        "units": null,
        "default_value": null
      },
      "flags": {
        "type": "uint32",
        "name": "flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "engine_load_percent": {
        "type": "uint8",
        "name": "engine_load_percent",
        "description": "Engine load estimate, percent, [0, 127]",
        "units": null,
        "default_value": null
      },
      "engine_speed_rpm": {
        "type": "uint32",
        "name": "engine_speed_rpm",
        "description": "Engine speed, revolutions per minute",
        "units": null,
        "default_value": null
      },
      "spark_dwell_time_ms": {
        "type": "float32",
        "name": "spark_dwell_time_ms",
        "description": "Spark dwell time, millisecond",
        "units": null,
        "default_value": null
      },
      "atmospheric_pressure_kpa": {
        "type": "float32",
        "name": "atmospheric_pressure_kpa",
        "description": "Atmospheric  pressure, kilopascal",
        "units": "barometric",
        "default_value": null
      },
      "intake_manifold_pressure_kpa": {
        "type": "float32",
        "name": "intake_manifold_pressure_kpa",
        "description": "Engine intake manifold pressure, kilopascal",
        "units": null,
        "default_value": null
      },
      "intake_manifold_temperature": {
        "type": "float32",
        "name": "intake_manifold_temperature",
        "description": "Engine intake manifold temperature, kelvin",
        "units": null,
        "default_value": null
      },
      "coolant_temperature": {
        "type": "float32",
        "name": "coolant_temperature",
        "description": "Engine coolant temperature, kelvin",
        "units": null,
        "default_value": null
      },
      "oil_pressure": {
        "type": "float32",
        "name": "oil_pressure",
        "description": "Oil pressure, kilopascal",
        "units": null,
        "default_value": null
      },
      "oil_temperature": {
        "type": "float32",
        "name": "oil_temperature",
        "description": "Oil temperature, kelvin",
        "units": null,
        "default_value": null
      },
      "fuel_pressure": {
        "type": "float32",
        "name": "fuel_pressure",
        "description": "Fuel pressure, kilopascal",
        "units": null,
        "default_value": null
      },
      "fuel_consumption_rate_cm3pm": {
        "type": "float32",
        "name": "fuel_consumption_rate_cm3pm",
        "description": "Instant fuel consumption estimate, /minute",
        "units": "centimeter^3",
        "default_value": null
      },
      "estimated_consumed_fuel_volume_cm3": {
        "type": "float32",
        "name": "estimated_consumed_fuel_volume_cm3",
        "description": "Estimate of the consumed fuel since the start of the engine, centimeter^3",
        "units": null,
        "default_value": null
      },
      "throttle_position_percent": {
        "type": "uint8",
        "name": "throttle_position_percent",
        "description": "Throttle position, percent",
        "units": null,
        "default_value": null
      },
      "ecu_index": {
        "type": "uint8",
        "name": "ecu_index",
        "description": "The index of the publishing ECU",
        "units": null,
        "default_value": null
      },
      "spark_plug_usage": {
        "type": "uint8",
        "name": "spark_plug_usage",
        "description": "Spark plug activity report.",
        "units": null,
        "default_value": null
      },
      "ignition_timing_deg": {
        "type": "float32",
        "name": "ignition_timing_deg",
        "description": "Cylinder ignition timing, angular degrees of the crankshaft",
        "units": null,
        "default_value": null
      },
      "injection_time_ms": {
        "type": "float32",
        "name": "injection_time_ms",
        "description": "Fuel injection time, millisecond",
        "units": null,
        "default_value": null
      },
      "cylinder_head_temperature": {
        "type": "float32",
        "name": "cylinder_head_temperature",
        "description": "Cylinder head temperature , kelvin",
        "units": "CHT",
        "default_value": null
      },
      "exhaust_gas_temperature": {
        "type": "float32",
        "name": "exhaust_gas_temperature",
        "description": "Exhaust gas temperature , kelvin",
        "units": "EGT",
        "default_value": null
      },
      "lambda_coefficient": {
        "type": "float32",
        "name": "lambda_coefficient",
        "description": "Estimated lambda coefficient, dimensionless ratio",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_internal_combustion_engine_control",
        "name": "internal_combustion_engine_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_landing_target_pose": {
    "name": "landing_target_pose",
    "description": "Relative position of precision land target in navigation (body fixed, north aligned, NED) and inertial (world fixed, north aligned, NED) frames",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "is_static": {
        "type": "bool",
        "name": "is_static",
        "description": "Flag indicating whether the landing target is static or moving with respect to the ground",
        "units": null,
        "default_value": null
      },
      "rel_pos_valid": {
        "type": "bool",
        "name": "rel_pos_valid",
        "description": "Flag showing whether relative position is valid",
        "units": null,
        "default_value": null
      },
      "rel_vel_valid": {
        "type": "bool",
        "name": "rel_vel_valid",
        "description": "Flag showing whether relative velocity is valid",
        "units": null,
        "default_value": null
      },
      "x_rel": {
        "type": "float32",
        "name": "x_rel",
        "description": "X/north position of target, relative to vehicle  [meters]",
        "units": "navigation frame",
        "default_value": null
      },
      "y_rel": {
        "type": "float32",
        "name": "y_rel",
        "description": "Y/east position of target, relative to vehicle  [meters]",
        "units": "navigation frame",
        "default_value": null
      },
      "z_rel": {
        "type": "float32",
        "name": "z_rel",
        "description": "Z/down position of target, relative to vehicle  [meters]",
        "units": "navigation frame",
        "default_value": null
      },
      "vx_rel": {
        "type": "float32",
        "name": "vx_rel",
        "description": "X/north velocity  of target, relative to vehicle  [meters/second]",
        "units": "navigation frame",
        "default_value": null
      },
      "vy_rel": {
        "type": "float32",
        "name": "vy_rel",
        "description": "Y/east velocity of target, relative to vehicle  [meters/second]",
        "units": "navigation frame",
        "default_value": null
      },
      "cov_x_rel": {
        "type": "float32",
        "name": "cov_x_rel",
        "description": "X/north position variance [meters^2]",
        "units": null,
        "default_value": null
      },
      "cov_y_rel": {
        "type": "float32",
        "name": "cov_y_rel",
        "description": "Y/east position variance [meters^2]",
        "units": null,
        "default_value": null
      },
      "cov_vx_rel": {
        "type": "float32",
        "name": "cov_vx_rel",
        "description": "X/north velocity variance [^2]",
        "units": "meters/second",
        "default_value": null
      },
      "cov_vy_rel": {
        "type": "float32",
        "name": "cov_vy_rel",
        "description": "Y/east velocity variance [^2]",
        "units": "meters/second",
        "default_value": null
      },
      "abs_pos_valid": {
        "type": "bool",
        "name": "abs_pos_valid",
        "description": "Flag showing whether absolute position is valid",
        "units": null,
        "default_value": null
      },
      "x_abs": {
        "type": "float32",
        "name": "x_abs",
        "description": "X/north position of target, relative to origin  [meters]",
        "units": "navigation frame",
        "default_value": null
      },
      "y_abs": {
        "type": "float32",
        "name": "y_abs",
        "description": "Y/east position of target, relative to origin  [meters]",
        "units": "navigation frame",
        "default_value": null
      },
      "z_abs": {
        "type": "float32",
        "name": "z_abs",
        "description": "Z/down position of target, relative to origin  [meters]",
        "units": "navigation frame",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_landing_target_estimator",
        "name": "landing_target_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_land_detected": {
    "name": "vehicle_land_detected",
    "description": "Contains vehicle land detected information for the vehicle.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_sagetech_mxs",
        "name": "sagetech_mxs",
        "type": "Module"
      },
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      },
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      },
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      },
      {
        "id": "m_mc_pos_control",
        "name": "mc_pos_control",
        "type": "Module"
      },
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_cpuload": {
    "name": "cpuload",
    "description": "Contains cpuload data including load (processor load from 0 to 1), ram_usage (ram usage from 0 to 1).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "load": {
        "type": "float32",
        "name": "load",
        "description": "processor load from 0 to 1",
        "units": null,
        "default_value": null
      },
      "ram_usage": {
        "type": "float32",
        "name": "ram_usage",
        "description": "RAM usage from 0 to 1",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_load_mon",
        "name": "load_mon",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_send_event",
        "name": "send_event",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_ulog_stream": {
    "name": "ulog_stream",
    "description": "Message to stream ULog data from the logger. Corresponds to the LOGGING_DATA\nmavlink message\nflags bitmasks\nAcked messages are published synchronous: a\npublisher waits for an ack before sending the\nnext message\ncan be used for recovery, when a previous message got lost",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "length": {
        "type": "uint8",
        "name": "length",
        "description": "length of data",
        "units": null,
        "default_value": null
      },
      "first_message_offset": {
        "type": "uint8",
        "name": "first_message_offset",
        "description": "offset into data where first message starts. This",
        "units": null,
        "default_value": null
      },
      "msg_sequence": {
        "type": "uint16",
        "name": "msg_sequence",
        "description": "allows determine drops",
        "units": null,
        "default_value": null
      },
      "flags": {
        "type": "uint8",
        "name": "flags",
        "description": "see FLAGS_*",
        "units": null,
        "default_value": null
      },
      "data": {
        "type": "uint8[249]",
        "name": "data",
        "description": "ulog data",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_logger",
        "name": "logger",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_manual_control_setpoint": {
    "name": "manual_control_setpoint",
    "description": "Contains setpoint values for the control system to follow.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_voxl_esc",
        "name": "voxl_esc",
        "type": "Module"
      },
      {
        "id": "m_airship_att_control",
        "name": "airship_att_control",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_fw_autotune_attitude_control",
        "name": "fw_autotune_attitude_control",
        "type": "Module"
      },
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_fw_rate_control",
        "name": "fw_rate_control",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_internal_combustion_engine_control",
        "name": "internal_combustion_engine_control",
        "type": "Module"
      },
      {
        "id": "m_logger",
        "name": "logger",
        "type": "Module"
      },
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      },
      {
        "id": "m_mc_autotune_attitude_control",
        "name": "mc_autotune_attitude_control",
        "type": "Module"
      },
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      },
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      },
      {
        "id": "m_rover_differential",
        "name": "rover_differential",
        "type": "Module"
      },
      {
        "id": "m_rover_mecanum",
        "name": "rover_mecanum",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_att_control",
        "name": "uuv_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_manual_control_switches": {
    "name": "manual_control_switches",
    "description": "Contains manual control switches data including mode_slot (the slot a specific model selector is in), arm_switch (arm/disarm switch: _disarmed_, armed), return_switch (return to launch 2 position switch : _normal_, rtl), and 10 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "the timestamp of the raw data",
        "units": "microseconds",
        "default_value": null
      },
      "mode_slot": {
        "type": "uint8",
        "name": "mode_slot",
        "description": "the slot a specific model selector is in",
        "units": null,
        "default_value": null
      },
      "arm_switch": {
        "type": "uint8",
        "name": "arm_switch",
        "description": "arm/disarm switch: _DISARMED_, ARMED",
        "units": null,
        "default_value": null
      },
      "return_switch": {
        "type": "uint8",
        "name": "return_switch",
        "description": "return to launch 2 position switch : _NORMAL_, RTL",
        "units": "mandatory",
        "default_value": null
      },
      "loiter_switch": {
        "type": "uint8",
        "name": "loiter_switch",
        "description": "loiter 2 position switch : _MISSION_, LOITER",
        "units": "optional",
        "default_value": null
      },
      "offboard_switch": {
        "type": "uint8",
        "name": "offboard_switch",
        "description": "offboard 2 position switch : _NORMAL_, OFFBOARD",
        "units": "optional",
        "default_value": null
      },
      "kill_switch": {
        "type": "uint8",
        "name": "kill_switch",
        "description": "throttle kill: _NORMAL_, KILL",
        "units": null,
        "default_value": null
      },
      "gear_switch": {
        "type": "uint8",
        "name": "gear_switch",
        "description": "landing gear switch: _DOWN_, UP",
        "units": null,
        "default_value": null
      },
      "transition_switch": {
        "type": "uint8",
        "name": "transition_switch",
        "description": "VTOL transition switch: _HOVER, FORWARD_FLIGHT",
        "units": null,
        "default_value": null
      },
      "photo_switch": {
        "type": "uint8",
        "name": "photo_switch",
        "description": "Photo trigger switch",
        "units": null,
        "default_value": null
      },
      "video_switch": {
        "type": "uint8",
        "name": "video_switch",
        "description": "Photo trigger switch",
        "units": null,
        "default_value": null
      },
      "payload_power_switch": {
        "type": "uint8",
        "name": "payload_power_switch",
        "description": "Payload power switch",
        "units": null,
        "default_value": null
      },
      "engage_main_motor_switch": {
        "type": "uint8",
        "name": "engage_main_motor_switch",
        "description": "Engage the main motor",
        "units": "for helicopters",
        "default_value": null
      },
      "switch_changes": {
        "type": "uint32",
        "name": "switch_changes",
        "description": "number of switch changes",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      },
      {
        "id": "m_rc_update",
        "name": "rc_update",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_rc_update",
        "name": "rc_update",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_action_request": {
    "name": "action_request",
    "description": "Contains action request data including action (what action is requested), source (how the request was triggered), mode (for action_switch_mode what mode is requested according to vehicle_status_s::navigation_state_*).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "action": {
        "type": "uint8",
        "name": "action",
        "description": "what action is requested",
        "units": null,
        "default_value": null
      },
      "source": {
        "type": "uint8",
        "name": "source",
        "description": "how the request was triggered",
        "units": null,
        "default_value": null
      },
      "mode": {
        "type": "uint8",
        "name": "mode",
        "description": "for ACTION_SWITCH_MODE what mode is requested according to vehicle_status_s::NAVIGATION_STATE_*",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_manual_control",
        "name": "manual_control",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_manager_set_attitude": {
    "name": "gimbal_manager_set_attitude",
    "description": "Contains gimbal manager set attitude data including origin_sysid (), origin_compid (), target_system (), and 7 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "origin_sysid": {
        "type": "uint8",
        "name": "origin_sysid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "origin_compid": {
        "type": "uint8",
        "name": "origin_compid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "target_system": {
        "type": "uint8",
        "name": "target_system",
        "description": "",
        "units": null,
        "default_value": null
      },
      "target_component": {
        "type": "uint8",
        "name": "target_component",
        "description": "",
        "units": null,
        "default_value": null
      },
      "flags": {
        "type": "uint32",
        "name": "flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gimbal_device_id": {
        "type": "uint8",
        "name": "gimbal_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_x": {
        "type": "float32",
        "name": "angular_velocity_x",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_y": {
        "type": "float32",
        "name": "angular_velocity_y",
        "description": "",
        "units": null,
        "default_value": null
      },
      "angular_velocity_z": {
        "type": "float32",
        "name": "angular_velocity_z",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_ulog_stream_ack": {
    "name": "ulog_stream_ack",
    "description": "Ack a previously sent ulog_stream message that had\nthe NEED_ACK flag set",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "msg_sequence": {
        "type": "uint16",
        "name": "msg_sequence",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_logger",
        "name": "logger",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_device_information": {
    "name": "gimbal_device_information",
    "description": "Contains gimbal device information data including vendor_name (), model_name (), custom_name (), and 12 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "vendor_name": {
        "type": "uint8[32]",
        "name": "vendor_name",
        "description": "",
        "units": null,
        "default_value": null
      },
      "model_name": {
        "type": "uint8[32]",
        "name": "model_name",
        "description": "",
        "units": null,
        "default_value": null
      },
      "custom_name": {
        "type": "uint8[32]",
        "name": "custom_name",
        "description": "",
        "units": null,
        "default_value": null
      },
      "firmware_version": {
        "type": "uint32",
        "name": "firmware_version",
        "description": "",
        "units": null,
        "default_value": null
      },
      "hardware_version": {
        "type": "uint32",
        "name": "hardware_version",
        "description": "",
        "units": null,
        "default_value": null
      },
      "uid": {
        "type": "uint64",
        "name": "uid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "cap_flags": {
        "type": "uint16",
        "name": "cap_flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "custom_cap_flags": {
        "type": "uint16",
        "name": "custom_cap_flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "roll_min": {
        "type": "float32",
        "name": "roll_min",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "roll_max": {
        "type": "float32",
        "name": "roll_max",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "pitch_min": {
        "type": "float32",
        "name": "pitch_min",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "pitch_max": {
        "type": "float32",
        "name": "pitch_max",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "yaw_min": {
        "type": "float32",
        "name": "yaw_min",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "yaw_max": {
        "type": "float32",
        "name": "yaw_max",
        "description": "[rad]",
        "units": null,
        "default_value": null
      },
      "gimbal_device_id": {
        "type": "uint8",
        "name": "gimbal_device_id",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_open_drone_id_operator_id": {
    "name": "open_drone_id_operator_id",
    "description": "Contains open drone id operator id data including id_or_mac (), operator_id_type (), operator_id ().",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "",
        "units": null,
        "default_value": null
      },
      "id_or_mac": {
        "type": "uint8[20]",
        "name": "id_or_mac",
        "description": "",
        "units": null,
        "default_value": null
      },
      "operator_id_type": {
        "type": "uint8",
        "name": "operator_id_type",
        "description": "",
        "units": null,
        "default_value": null
      },
      "operator_id": {
        "type": "char[20]",
        "name": "operator_id",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_rc_parameter_map": {
    "name": "rc_parameter_map",
    "description": "Contains rc parameter map data including valid (true for rc-param channels which are mapped to a param), param_index (corresponding param index, this field is ignored if set to -1, in this case param_id will be used), param_id (map_nchan *  chars, corresponding param id, null terminated), and 4 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "valid": {
        "type": "bool[3]",
        "name": "valid",
        "description": "true for RC-Param channels which are mapped to a param",
        "units": null,
        "default_value": null
      },
      "param_index": {
        "type": "int32[3]",
        "name": "param_index",
        "description": "corresponding param index, this field is ignored if set to -1, in this case param_id will be used",
        "units": null,
        "default_value": null
      },
      "param_id": {
        "type": "char[51]",
        "name": "param_id",
        "description": "MAP_NCHAN *  chars, corresponding param id, null terminated",
        "units": "ID_LEN + 1",
        "default_value": null
      },
      "scale": {
        "type": "float32[3]",
        "name": "scale",
        "description": "scale to map the RC input [-1, 1] to a parameter value",
        "units": null,
        "default_value": null
      },
      "value0": {
        "type": "float32[3]",
        "name": "value0",
        "description": "initial value around which the parameter value is changed",
        "units": null,
        "default_value": null
      },
      "value_min": {
        "type": "float32[3]",
        "name": "value_min",
        "description": "minimal parameter value",
        "units": null,
        "default_value": null
      },
      "value_max": {
        "type": "float32[3]",
        "name": "value_max",
        "description": "minimal parameter value",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_rc_update",
        "name": "rc_update",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_telemetry_status": {
    "name": "telemetry_status",
    "description": "Heartbeats per type\nHeartbeats per component\nMisc component health",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "type": {
        "type": "uint8",
        "name": "type",
        "description": "type of the radio hardware",
        "units": "LINK_TYPE_*",
        "default_value": null
      },
      "mode": {
        "type": "uint8",
        "name": "mode",
        "description": "",
        "units": null,
        "default_value": null
      },
      "flow_control": {
        "type": "bool",
        "name": "flow_control",
        "description": "",
        "units": null,
        "default_value": null
      },
      "forwarding": {
        "type": "bool",
        "name": "forwarding",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mavlink_v2": {
        "type": "bool",
        "name": "mavlink_v2",
        "description": "",
        "units": null,
        "default_value": null
      },
      "ftp": {
        "type": "bool",
        "name": "ftp",
        "description": "",
        "units": null,
        "default_value": null
      },
      "streams": {
        "type": "uint8",
        "name": "streams",
        "description": "",
        "units": null,
        "default_value": null
      },
      "data_rate": {
        "type": "float32",
        "name": "data_rate",
        "description": "configured maximum data rate",
        "units": "Bytes/s",
        "default_value": null
      },
      "rate_multiplier": {
        "type": "float32",
        "name": "rate_multiplier",
        "description": "",
        "units": null,
        "default_value": null
      },
      "tx_rate_avg": {
        "type": "float32",
        "name": "tx_rate_avg",
        "description": "transmit rate average",
        "units": "Bytes/s",
        "default_value": null
      },
      "tx_error_rate_avg": {
        "type": "float32",
        "name": "tx_error_rate_avg",
        "description": "transmit error rate average",
        "units": "Bytes/s",
        "default_value": null
      },
      "tx_message_count": {
        "type": "uint32",
        "name": "tx_message_count",
        "description": "total message sent count",
        "units": null,
        "default_value": null
      },
      "tx_buffer_overruns": {
        "type": "uint32",
        "name": "tx_buffer_overruns",
        "description": "number of TX buffer overruns",
        "units": null,
        "default_value": null
      },
      "rx_rate_avg": {
        "type": "float32",
        "name": "rx_rate_avg",
        "description": "transmit rate average",
        "units": "Bytes/s",
        "default_value": null
      },
      "rx_message_count": {
        "type": "uint32",
        "name": "rx_message_count",
        "description": "count of total messages received",
        "units": null,
        "default_value": null
      },
      "rx_message_lost_count": {
        "type": "uint32",
        "name": "rx_message_lost_count",
        "description": "",
        "units": null,
        "default_value": null
      },
      "rx_buffer_overruns": {
        "type": "uint32",
        "name": "rx_buffer_overruns",
        "description": "number of RX buffer overruns",
        "units": null,
        "default_value": null
      },
      "rx_parse_errors": {
        "type": "uint32",
        "name": "rx_parse_errors",
        "description": "number of parse errors",
        "units": null,
        "default_value": null
      },
      "rx_packet_drop_count": {
        "type": "uint32",
        "name": "rx_packet_drop_count",
        "description": "number of packet drops",
        "units": null,
        "default_value": null
      },
      "rx_message_lost_rate": {
        "type": "float32",
        "name": "rx_message_lost_rate",
        "description": "",
        "units": null,
        "default_value": null
      },
      "heartbeat_type_antenna_tracker": {
        "type": "bool",
        "name": "heartbeat_type_antenna_tracker",
        "description": "MAV_TYPE_ANTENNA_TRACKER",
        "units": null,
        "default_value": null
      },
      "heartbeat_type_gcs": {
        "type": "bool",
        "name": "heartbeat_type_gcs",
        "description": "MAV_TYPE_GCS",
        "units": null,
        "default_value": null
      },
      "heartbeat_type_onboard_controller": {
        "type": "bool",
        "name": "heartbeat_type_onboard_controller",
        "description": "MAV_TYPE_ONBOARD_CONTROLLER",
        "units": null,
        "default_value": null
      },
      "heartbeat_type_gimbal": {
        "type": "bool",
        "name": "heartbeat_type_gimbal",
        "description": "MAV_TYPE_GIMBAL",
        "units": null,
        "default_value": null
      },
      "heartbeat_type_adsb": {
        "type": "bool",
        "name": "heartbeat_type_adsb",
        "description": "MAV_TYPE_ADSB",
        "units": null,
        "default_value": null
      },
      "heartbeat_type_camera": {
        "type": "bool",
        "name": "heartbeat_type_camera",
        "description": "MAV_TYPE_CAMERA",
        "units": null,
        "default_value": null
      },
      "heartbeat_type_parachute": {
        "type": "bool",
        "name": "heartbeat_type_parachute",
        "description": "MAV_TYPE_PARACHUTE",
        "units": null,
        "default_value": null
      },
      "heartbeat_type_open_drone_id": {
        "type": "bool",
        "name": "heartbeat_type_open_drone_id",
        "description": "MAV_TYPE_ODID",
        "units": null,
        "default_value": null
      },
      "heartbeat_component_telemetry_radio": {
        "type": "bool",
        "name": "heartbeat_component_telemetry_radio",
        "description": "MAV_COMP_ID_TELEMETRY_RADIO",
        "units": null,
        "default_value": null
      },
      "heartbeat_component_log": {
        "type": "bool",
        "name": "heartbeat_component_log",
        "description": "MAV_COMP_ID_LOG",
        "units": null,
        "default_value": null
      },
      "heartbeat_component_osd": {
        "type": "bool",
        "name": "heartbeat_component_osd",
        "description": "MAV_COMP_ID_OSD",
        "units": null,
        "default_value": null
      },
      "heartbeat_component_vio": {
        "type": "bool",
        "name": "heartbeat_component_vio",
        "description": "MAV_COMP_ID_VISUAL_INERTIAL_ODOMETRY",
        "units": null,
        "default_value": null
      },
      "heartbeat_component_pairing_manager": {
        "type": "bool",
        "name": "heartbeat_component_pairing_manager",
        "description": "MAV_COMP_ID_PAIRING_MANAGER",
        "units": null,
        "default_value": null
      },
      "heartbeat_component_udp_bridge": {
        "type": "bool",
        "name": "heartbeat_component_udp_bridge",
        "description": "MAV_COMP_ID_UDP_BRIDGE",
        "units": null,
        "default_value": null
      },
      "heartbeat_component_uart_bridge": {
        "type": "bool",
        "name": "heartbeat_component_uart_bridge",
        "description": "MAV_COMP_ID_UART_BRIDGE",
        "units": null,
        "default_value": null
      },
      "open_drone_id_system_healthy": {
        "type": "bool",
        "name": "open_drone_id_system_healthy",
        "description": "",
        "units": null,
        "default_value": null
      },
      "parachute_system_healthy": {
        "type": "bool",
        "name": "parachute_system_healthy",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_camera_status": {
    "name": "camera_status",
    "description": "Contains camera status data including active_sys_id (mavlink system id of the currently active camera), active_comp_id (mavlink component id of currently active camera).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "active_sys_id": {
        "type": "uint8",
        "name": "active_sys_id",
        "description": "mavlink system id of the currently active camera",
        "units": null,
        "default_value": null
      },
      "active_comp_id": {
        "type": "uint8",
        "name": "active_comp_id",
        "description": "mavlink component id of currently active camera",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_mc_virtual_attitude_setpoint": {
    "name": "mc_virtual_attitude_setpoint",
    "description": "Contains setpoint values for the control system to follow.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "Quaternion rotation from the FRD body frame to the NED earth frame",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_fw_virtual_attitude_setpoint": {
    "name": "fw_virtual_attitude_setpoint",
    "description": "Contains setpoint values for the control system to follow.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "Quaternion rotation from the FRD body frame to the NED earth frame",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_visual_odometry": {
    "name": "vehicle_visual_odometry",
    "description": "Contains vehicle visual odometry information for the vehicle.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "vx": {
        "type": "float",
        "name": "vx",
        "description": "Velocity in North direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "vy": {
        "type": "float",
        "name": "vy",
        "description": "Velocity in East direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "vz": {
        "type": "float",
        "name": "vz",
        "description": "Velocity in Down direction in NED earth-fixed frame",
        "units": "m/s"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_attitude_estimator_q",
        "name": "attitude_estimator_q",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_event": {
    "name": "event",
    "description": "Events interface",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "id": {
        "type": "uint32",
        "name": "id",
        "description": "Event ID",
        "units": null,
        "default_value": null
      },
      "event_sequence": {
        "type": "uint16",
        "name": "event_sequence",
        "description": "Event sequence number",
        "units": null,
        "default_value": null
      },
      "arguments": {
        "type": "uint8[25]",
        "name": "arguments",
        "description": "arguments, depend on event id",
        "units": "optional",
        "default_value": null
      },
      "log_levels": {
        "type": "uint8",
        "name": "log_levels",
        "description": "Log levels: 4 bits MSB: internal, 4 bits LSB: external",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_mocap_odometry": {
    "name": "vehicle_mocap_odometry",
    "description": "Contains motion capture position and attitude data.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "vx": {
        "type": "float",
        "name": "vx",
        "description": "Velocity in North direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "vy": {
        "type": "float",
        "name": "vy",
        "description": "Velocity in East direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "vz": {
        "type": "float",
        "name": "vz",
        "description": "Velocity in Down direction in NED earth-fixed frame",
        "units": "m/s"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_attitude_estimator_q",
        "name": "attitude_estimator_q",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_open_drone_id_system": {
    "name": "open_drone_id_system",
    "description": "Contains open drone id system data including id_or_mac (), operator_location_type (), classification_type (), and 9 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "",
        "units": null,
        "default_value": null
      },
      "id_or_mac": {
        "type": "uint8[20]",
        "name": "id_or_mac",
        "description": "",
        "units": null,
        "default_value": null
      },
      "operator_location_type": {
        "type": "uint8",
        "name": "operator_location_type",
        "description": "",
        "units": null,
        "default_value": null
      },
      "classification_type": {
        "type": "uint8",
        "name": "classification_type",
        "description": "",
        "units": null,
        "default_value": null
      },
      "operator_latitude": {
        "type": "int32",
        "name": "operator_latitude",
        "description": "",
        "units": null,
        "default_value": null
      },
      "operator_longitude": {
        "type": "int32",
        "name": "operator_longitude",
        "description": "",
        "units": null,
        "default_value": null
      },
      "area_count": {
        "type": "uint16",
        "name": "area_count",
        "description": "",
        "units": null,
        "default_value": null
      },
      "area_radius": {
        "type": "uint16",
        "name": "area_radius",
        "description": "",
        "units": null,
        "default_value": null
      },
      "area_ceiling": {
        "type": "float32",
        "name": "area_ceiling",
        "description": "",
        "units": null,
        "default_value": null
      },
      "area_floor": {
        "type": "float32",
        "name": "area_floor",
        "description": "",
        "units": null,
        "default_value": null
      },
      "category_eu": {
        "type": "uint8",
        "name": "category_eu",
        "description": "",
        "units": null,
        "default_value": null
      },
      "class_eu": {
        "type": "uint8",
        "name": "class_eu",
        "description": "",
        "units": null,
        "default_value": null
      },
      "operator_altitude_geo": {
        "type": "float32",
        "name": "operator_altitude_geo",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_open_drone_id_self_id": {
    "name": "open_drone_id_self_id",
    "description": "Contains open drone id self id data including id_or_mac (), description_type (), description ().",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "",
        "units": null,
        "default_value": null
      },
      "id_or_mac": {
        "type": "uint8[20]",
        "name": "id_or_mac",
        "description": "",
        "units": null,
        "default_value": null
      },
      "description_type": {
        "type": "uint8",
        "name": "description_type",
        "description": "",
        "units": null,
        "default_value": null
      },
      "description": {
        "type": "char[23]",
        "name": "description",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_airspeed": {
    "name": "airspeed",
    "description": "Contains airspeed data including indicated_airspeed_m_s (indicated airspeed in m/s), true_airspeed_m_s (true filtered airspeed in m/s), confidence (confidence value from 0 to 1 for this sensor).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "",
        "units": null,
        "default_value": null
      },
      "indicated_airspeed_m_s": {
        "type": "float32",
        "name": "indicated_airspeed_m_s",
        "description": "indicated airspeed in m/s",
        "units": null,
        "default_value": null
      },
      "true_airspeed_m_s": {
        "type": "float32",
        "name": "true_airspeed_m_s",
        "description": "true filtered airspeed in m/s",
        "units": null,
        "default_value": null
      },
      "confidence": {
        "type": "float32",
        "name": "confidence",
        "description": "confidence value from 0 to 1 for this sensor",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      },
      {
        "id": "m_simulator_sih",
        "name": "simulator_sih",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_uavcan_parameter_request": {
    "name": "uavcan_parameter_request",
    "description": "UAVCAN-MAVLink parameter bridge request type",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "message_type": {
        "type": "uint8",
        "name": "message_type",
        "description": "MAVLink message type: PARAM_REQUEST_READ, PARAM_REQUEST_LIST, PARAM_SET",
        "units": null,
        "default_value": null
      },
      "node_id": {
        "type": "uint8",
        "name": "node_id",
        "description": "UAVCAN node ID mapped from MAVLink component ID",
        "units": null,
        "default_value": null
      },
      "param_id": {
        "type": "char[17]",
        "name": "param_id",
        "description": "MAVLink/UAVCAN parameter name",
        "units": null,
        "default_value": null
      },
      "param_index": {
        "type": "int16",
        "name": "param_index",
        "description": "-1 if the param_id field should be used as identifier",
        "units": null,
        "default_value": null
      },
      "param_type": {
        "type": "uint8",
        "name": "param_type",
        "description": "MAVLink parameter type",
        "units": null,
        "default_value": null
      },
      "int_value": {
        "type": "int64",
        "name": "int_value",
        "description": "current value if param_type is int-like",
        "units": null,
        "default_value": null
      },
      "real_value": {
        "type": "float32",
        "name": "real_value",
        "description": "current value if param_type is float-like",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_uavcan",
        "name": "uavcan",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_attitude_setpoint": {
    "name": "vehicle_attitude_setpoint",
    "description": "Contains setpoint values for the control system to follow.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "Quaternion rotation from the FRD body frame to the NED earth frame",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_pos_control",
        "name": "mc_pos_control",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_pos_control",
        "name": "uuv_pos_control",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      },
      {
        "id": "m_fw_att_control",
        "name": "fw_att_control",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_mc_att_control",
        "name": "mc_att_control",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_uuv_att_control",
        "name": "uuv_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_gimbal_manager_set_manual_control": {
    "name": "gimbal_manager_set_manual_control",
    "description": "Contains gimbal manager set manual control data including origin_sysid (), origin_compid (), target_system (), and 7 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "origin_sysid": {
        "type": "uint8",
        "name": "origin_sysid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "origin_compid": {
        "type": "uint8",
        "name": "origin_compid",
        "description": "",
        "units": null,
        "default_value": null
      },
      "target_system": {
        "type": "uint8",
        "name": "target_system",
        "description": "",
        "units": null,
        "default_value": null
      },
      "target_component": {
        "type": "uint8",
        "name": "target_component",
        "description": "",
        "units": null,
        "default_value": null
      },
      "flags": {
        "type": "uint32",
        "name": "flags",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gimbal_device_id": {
        "type": "uint8",
        "name": "gimbal_device_id",
        "description": "",
        "units": null,
        "default_value": null
      },
      "pitch": {
        "type": "float32",
        "name": "pitch",
        "description": "unitless -1..1, can be NAN",
        "units": null,
        "default_value": null
      },
      "yaw": {
        "type": "float32",
        "name": "yaw",
        "description": "unitless -1..1, can be NAN",
        "units": null,
        "default_value": null
      },
      "pitch_rate": {
        "type": "float32",
        "name": "pitch_rate",
        "description": "unitless -1..1, can be NAN",
        "units": null,
        "default_value": null
      },
      "yaw_rate": {
        "type": "float32",
        "name": "yaw_rate",
        "description": "unitless -1..1, can be NAN",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_mission": {
    "name": "mission",
    "description": "Contains mission data including mission_dataman_id (default 0, there are two offboard storage places in the dataman: 0 or 1), fence_dataman_id (default 0, there are two offboard storage places in the dataman: 0 or 1), safepoint_dataman_id (default 0, there are two offboard storage places in the dataman: 0 or 1), and 7 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "mission_dataman_id": {
        "type": "uint8",
        "name": "mission_dataman_id",
        "description": "default 0, there are two offboard storage places in the dataman: 0 or 1",
        "units": null,
        "default_value": null
      },
      "fence_dataman_id": {
        "type": "uint8",
        "name": "fence_dataman_id",
        "description": "default 0, there are two offboard storage places in the dataman: 0 or 1",
        "units": null,
        "default_value": null
      },
      "safepoint_dataman_id": {
        "type": "uint8",
        "name": "safepoint_dataman_id",
        "description": "default 0, there are two offboard storage places in the dataman: 0 or 1",
        "units": null,
        "default_value": null
      },
      "count": {
        "type": "uint16",
        "name": "count",
        "description": "count of the missions stored in the dataman",
        "units": null,
        "default_value": null
      },
      "current_seq": {
        "type": "int32",
        "name": "current_seq",
        "description": "default -1, start at the one changed latest",
        "units": null,
        "default_value": null
      },
      "land_start_index": {
        "type": "int32",
        "name": "land_start_index",
        "description": "Index of the land start marker, if unavailable index of the land item, -1 otherwise",
        "units": null,
        "default_value": null
      },
      "land_index": {
        "type": "int32",
        "name": "land_index",
        "description": "Index of the land item, -1 otherwise",
        "units": null,
        "default_value": null
      },
      "mission_id": {
        "type": "uint32",
        "name": "mission_id",
        "description": "indicates updates to the mission, reload from dataman if changed",
        "units": null,
        "default_value": null
      },
      "geofence_id": {
        "type": "uint32",
        "name": "geofence_id",
        "description": "indicates updates to the geofence, reload from dataman if changed",
        "units": null,
        "default_value": null
      },
      "safe_points_id": {
        "type": "uint32",
        "name": "safe_points_id",
        "description": "indicates updates to the safe points, reload from dataman if changed",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_offboard_control_mode": {
    "name": "offboard_control_mode",
    "description": "Off-board control mode",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "position": {
        "type": "bool",
        "name": "position",
        "description": "",
        "units": null,
        "default_value": null
      },
      "velocity": {
        "type": "bool",
        "name": "velocity",
        "description": "",
        "units": null,
        "default_value": null
      },
      "acceleration": {
        "type": "bool",
        "name": "acceleration",
        "description": "",
        "units": null,
        "default_value": null
      },
      "attitude": {
        "type": "bool",
        "name": "attitude",
        "description": "",
        "units": null,
        "default_value": null
      },
      "body_rate": {
        "type": "bool",
        "name": "body_rate",
        "description": "",
        "units": null,
        "default_value": null
      },
      "thrust_and_torque": {
        "type": "bool",
        "name": "thrust_and_torque",
        "description": "",
        "units": null,
        "default_value": null
      },
      "direct_actuator": {
        "type": "bool",
        "name": "direct_actuator",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_takeoff_status": {
    "name": "takeoff_status",
    "description": "Status of the takeoff state machine currently just available for multicopters",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "takeoff_state": {
        "type": "uint8",
        "name": "takeoff_state",
        "description": "",
        "units": null,
        "default_value": null
      },
      "tilt_limit": {
        "type": "float32",
        "name": "tilt_limit",
        "description": "limited tilt feasibility during takeoff, contains maximum tilt otherwise",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mc_pos_control",
        "name": "mc_pos_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_flight_mode_manager",
        "name": "flight_mode_manager",
        "type": "Module"
      },
      {
        "id": "m_land_detector",
        "name": "land_detector",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_actuator_controls_status_0": {
    "name": "actuator_controls_status_0",
    "description": "Contains status information about the system or component.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "control": {
        "type": "float32[]",
        "name": "control",
        "description": "Actuator control outputs",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_mc_rate_control",
        "name": "mc_rate_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mc_autotune_attitude_control",
        "name": "mc_autotune_attitude_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_rtl_time_estimate": {
    "name": "rtl_time_estimate",
    "description": "Contains rtl time estimate data including valid (flag indicating whether the time estiamtes are valid), time_estimate ([s] estimated time for rtl), safe_time_estimate ([s] same as time_estimate, but with safety factor and safety margin included).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "valid": {
        "type": "bool",
        "name": "valid",
        "description": "Flag indicating whether the time estiamtes are valid",
        "units": null,
        "default_value": null
      },
      "time_estimate": {
        "type": "float32",
        "name": "time_estimate",
        "description": "[s] Estimated time for RTL",
        "units": null,
        "default_value": null
      },
      "safe_time_estimate": {
        "type": "float32",
        "name": "safe_time_estimate",
        "description": "[s] Same as time_estimate, but with safety factor and safety margin included",
        "units": "factor*t + margin",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_geofence_result": {
    "name": "geofence_result",
    "description": "Contains geofence result data including geofence_max_dist_triggered (true the check for max distance from home is triggered), geofence_max_alt_triggered (true the check for max altitude above home is triggered), geofence_custom_fence_triggered (true the check for custom inclusion/exclusion geofence is triggered), and 1 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "geofence_max_dist_triggered": {
        "type": "bool",
        "name": "geofence_max_dist_triggered",
        "description": "true the check for max distance from Home is triggered",
        "units": null,
        "default_value": null
      },
      "geofence_max_alt_triggered": {
        "type": "bool",
        "name": "geofence_max_alt_triggered",
        "description": "true the check for max altitude above Home is triggered",
        "units": null,
        "default_value": null
      },
      "geofence_custom_fence_triggered": {
        "type": "bool",
        "name": "geofence_custom_fence_triggered",
        "description": "true the check for custom inclusion/exclusion geofence is triggered",
        "units": "s",
        "default_value": null
      },
      "geofence_action": {
        "type": "uint8",
        "name": "geofence_action",
        "description": "action to take when the geofence is breached",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_mission_result": {
    "name": "mission_result",
    "description": "Contains mission result data including mission_id (id for the mission for which the result was generated), geofence_id (id for the corresponding geofence for which the result was generated), home_position_counter (counter of the home position for which the result was generated), and 11 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "mission_id": {
        "type": "uint32",
        "name": "mission_id",
        "description": "Id for the mission for which the result was generated",
        "units": null,
        "default_value": null
      },
      "geofence_id": {
        "type": "uint32",
        "name": "geofence_id",
        "description": "Id for the corresponding geofence for which the result was generated",
        "units": "used for mission feasibility",
        "default_value": null
      },
      "home_position_counter": {
        "type": "uint32",
        "name": "home_position_counter",
        "description": "Counter of the home position for which the result was generated",
        "units": "used for mission feasibility",
        "default_value": null
      },
      "seq_reached": {
        "type": "int32",
        "name": "seq_reached",
        "description": "Sequence of the mission item which has been reached, default -1",
        "units": null,
        "default_value": null
      },
      "seq_current": {
        "type": "uint16",
        "name": "seq_current",
        "description": "Sequence of the current mission item",
        "units": null,
        "default_value": null
      },
      "seq_total": {
        "type": "uint16",
        "name": "seq_total",
        "description": "Total number of mission items",
        "units": null,
        "default_value": null
      },
      "valid": {
        "type": "bool",
        "name": "valid",
        "description": "true if mission is valid",
        "units": null,
        "default_value": null
      },
      "warning": {
        "type": "bool",
        "name": "warning",
        "description": "true if mission is valid, but has potentially problematic items leading to safety warnings",
        "units": null,
        "default_value": null
      },
      "finished": {
        "type": "bool",
        "name": "finished",
        "description": "true if mission has been completed",
        "units": null,
        "default_value": null
      },
      "failure": {
        "type": "bool",
        "name": "failure",
        "description": "true if the mission cannot continue or be completed for some reason",
        "units": null,
        "default_value": null
      },
      "item_do_jump_changed": {
        "type": "bool",
        "name": "item_do_jump_changed",
        "description": "true if the number of do jumps remaining has changed",
        "units": null,
        "default_value": null
      },
      "item_changed_index": {
        "type": "uint16",
        "name": "item_changed_index",
        "description": "indicate which item has changed",
        "units": null,
        "default_value": null
      },
      "item_do_jump_remaining": {
        "type": "uint16",
        "name": "item_do_jump_remaining",
        "description": "set to the number of do jumps remaining for that item",
        "units": null,
        "default_value": null
      },
      "execution_mode": {
        "type": "uint8",
        "name": "execution_mode",
        "description": "indicates the mode in which the mission is executed",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_geofence_status": {
    "name": "geofence_status",
    "description": "Contains geofence status data including geofence_id (loaded geofence id), status (current geofence status).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "geofence_id": {
        "type": "uint32",
        "name": "geofence_id",
        "description": "loaded geofence id",
        "units": null,
        "default_value": null
      },
      "status": {
        "type": "uint8",
        "name": "status",
        "description": "Current geofence status",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_roi": {
    "name": "vehicle_roi",
    "description": "Vehicle Region Of Interest (ROI)\nadditional angle offsets to next waypoint (only used with ROI_WPNEXT)",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "mode": {
        "type": "uint8",
        "name": "mode",
        "description": "ROI mode",
        "units": "see above",
        "default_value": null
      },
      "lat": {
        "type": "float64",
        "name": "lat",
        "description": "Latitude to point to",
        "units": null,
        "default_value": null
      },
      "lon": {
        "type": "float64",
        "name": "lon",
        "description": "Longitude to point to",
        "units": null,
        "default_value": null
      },
      "alt": {
        "type": "float32",
        "name": "alt",
        "description": "Altitude to point to",
        "units": null,
        "default_value": null
      },
      "roll_offset": {
        "type": "float32",
        "name": "roll_offset",
        "description": "angle offset in rad",
        "units": null,
        "default_value": null
      },
      "pitch_offset": {
        "type": "float32",
        "name": "pitch_offset",
        "description": "angle offset in rad",
        "units": null,
        "default_value": null
      },
      "yaw_offset": {
        "type": "float32",
        "name": "yaw_offset",
        "description": "angle offset in rad",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_distance_sensor_mode_change_request": {
    "name": "distance_sensor_mode_change_request",
    "description": "Contains distance sensor mode change request data including request_on_off (request to disable/enable the distance sensor).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "request_on_off": {
        "type": "uint8",
        "name": "request_on_off",
        "description": "request to disable/enable the distance sensor",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_lightware_laser_i2c",
        "name": "lightware_laser_i2c",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_position_setpoint_triplet": {
    "name": "position_setpoint_triplet",
    "description": "Global position setpoint triplet in WGS84 coordinates.\nThis are the three next waypoints (or just the next two or one).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "previous": {
        "type": "PositionSetpoint",
        "name": "previous",
        "description": "",
        "units": null,
        "default_value": null
      },
      "current": {
        "type": "PositionSetpoint",
        "name": "current",
        "description": "",
        "units": null,
        "default_value": null
      },
      "next": {
        "type": "PositionSetpoint",
        "name": "next",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_navigator",
        "name": "navigator",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_fw_pos_control",
        "name": "fw_pos_control",
        "type": "Module"
      },
      {
        "id": "m_gimbal",
        "name": "gimbal",
        "type": "Module"
      },
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_rover_pos_control",
        "name": "rover_pos_control",
        "type": "Module"
      },
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_rover_steering_setpoint": {
    "name": "rover_steering_setpoint",
    "description": "TOPICS rover_steering_setpoint",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "normalized_steering_angle": {
        "type": "float32",
        "name": "normalized_steering_angle",
        "description": "[-1, 1] Normalized steering angle",
        "units": "Only for Ackermann-steered rovers",
        "default_value": null
      },
      "normalized_speed_diff": {
        "type": "float32",
        "name": "normalized_speed_diff",
        "description": "[-1, 1] Normalized speed difference between the left and right wheels of the rover",
        "units": "Only for Differential/Mecanum rovers",
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      },
      {
        "id": "m_rover_differential",
        "name": "rover_differential",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      },
      {
        "id": "m_rover_differential",
        "name": "rover_differential",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_rover_throttle_setpoint": {
    "name": "rover_throttle_setpoint",
    "description": "TOPICS rover_throttle_setpoint",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "throttle_body_x": {
        "type": "float32",
        "name": "throttle_body_x",
        "description": "throttle setpoint along body X axis [-1, 1]",
        "units": null,
        "default_value": null
      },
      "throttle_body_y": {
        "type": "float32",
        "name": "throttle_body_y",
        "description": "throttle setpoint along body Y axis [-1, 1]",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      },
      {
        "id": "m_rover_differential",
        "name": "rover_differential",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_rover_ackermann",
        "name": "rover_ackermann",
        "type": "Module"
      },
      {
        "id": "m_rover_differential",
        "name": "rover_differential",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensors_status_imu": {
    "name": "sensors_status_imu",
    "description": "\nSensor check metrics. This will be zero for a sensor that's primary or unpopulated.\n",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "accel_device_id_primary": {
        "type": "uint32",
        "name": "accel_device_id_primary",
        "description": "current primary accel device id for reference",
        "units": null,
        "default_value": null
      },
      "accel_device_ids": {
        "type": "uint32[4]",
        "name": "accel_device_ids",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_inconsistency_m_s_s": {
        "type": "float32[4]",
        "name": "accel_inconsistency_m_s_s",
        "description": "magnitude of acceleration difference between IMU instance and mean in m/s^2.",
        "units": null,
        "default_value": null
      },
      "accel_healthy": {
        "type": "bool[4]",
        "name": "accel_healthy",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_priority": {
        "type": "uint8[4]",
        "name": "accel_priority",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_device_id_primary": {
        "type": "uint32",
        "name": "gyro_device_id_primary",
        "description": "current primary gyro device id for reference",
        "units": null,
        "default_value": null
      },
      "gyro_device_ids": {
        "type": "uint32[4]",
        "name": "gyro_device_ids",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_inconsistency_rad_s": {
        "type": "float32[4]",
        "name": "gyro_inconsistency_rad_s",
        "description": "magnitude of angular rate difference between IMU instance and mean in .",
        "units": "rad/s",
        "default_value": null
      },
      "gyro_healthy": {
        "type": "bool[4]",
        "name": "gyro_healthy",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_priority": {
        "type": "uint8[4]",
        "name": "gyro_priority",
        "description": "",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_combined": {
    "name": "sensor_combined",
    "description": "Sensor readings in SI-unit form.\nThese fields are scaled and offset-compensated where possible and do not\nchange with board revisions and sensor updates.\ngyro timstamp is equal to the timestamp of the message",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "gyro_rad": {
        "type": "float32[3]",
        "name": "gyro_rad",
        "description": "average angular rate measured in the FRD body frame XYZ-axis in rad/s over the last gyro sampling period",
        "units": null,
        "default_value": null
      },
      "gyro_integral_dt": {
        "type": "uint32",
        "name": "gyro_integral_dt",
        "description": "gyro measurement sampling period in microseconds",
        "units": null,
        "default_value": null
      },
      "accelerometer_m_s2": {
        "type": "float32[3]",
        "name": "accelerometer_m_s2",
        "description": "average value acceleration measured in the FRD body frame XYZ-axis in m/s^2 over the last accelerometer sampling period",
        "units": null,
        "default_value": null
      },
      "accelerometer_integral_dt": {
        "type": "uint32",
        "name": "accelerometer_integral_dt",
        "description": "accelerometer measurement sampling period in microseconds",
        "units": null,
        "default_value": null
      },
      "accelerometer_clipping": {
        "type": "uint8",
        "name": "accelerometer_clipping",
        "description": "bitfield indicating if there was any accelerometer clipping  during the integration time frame",
        "units": "per axis",
        "default_value": null
      },
      "gyro_clipping": {
        "type": "uint8",
        "name": "gyro_clipping",
        "description": "bitfield indicating if there was any gyro clipping  during the integration time frame",
        "units": "per axis",
        "default_value": null
      },
      "accel_calibration_count": {
        "type": "uint8",
        "name": "accel_calibration_count",
        "description": "Calibration changed counter. Monotonically increases whenever accelermeter calibration changes.",
        "units": null,
        "default_value": null
      },
      "gyro_calibration_count": {
        "type": "uint8",
        "name": "gyro_calibration_count",
        "description": "Calibration changed counter. Monotonically increases whenever rate gyro calibration changes.",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_attitude_estimator_q",
        "name": "attitude_estimator_q",
        "type": "Module"
      },
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      },
      {
        "id": "m_local_position_estimator",
        "name": "local_position_estimator",
        "type": "Module"
      },
      {
        "id": "m_template_module",
        "name": "template_module",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_local_position_groundtruth": {
    "name": "vehicle_local_position_groundtruth",
    "description": "Contains simulation or motion capture ground truth data for state estimation validation.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "x": {
        "type": "float",
        "name": "x",
        "description": "North position in NED earth-fixed frame",
        "units": "m"
      },
      "y": {
        "type": "float",
        "name": "y",
        "description": "East position in NED earth-fixed frame",
        "units": "m"
      },
      "z": {
        "type": "float",
        "name": "z",
        "description": "Down position in NED earth-fixed frame",
        "units": "m"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_sih",
        "name": "simulator_sih",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_sensor_airspeed_sim",
        "name": "sensor_airspeed_sim",
        "type": "Module"
      },
      {
        "id": "m_sensor_gps_sim",
        "name": "sensor_gps_sim",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_attitude_groundtruth": {
    "name": "vehicle_attitude_groundtruth",
    "description": "Contains simulation or motion capture ground truth data for state estimation validation.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "q": {
        "type": "float32[4]",
        "name": "q",
        "description": "Quaternion rotation from the FRD body frame to the NED earth frame",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_sih",
        "name": "simulator_sih",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_sensor_mag_sim",
        "name": "sensor_mag_sim",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_gyro": {
    "name": "sensor_gyro",
    "description": "Contains sensor gyro data including device_id (unique device id for the sensor that does not change between power cycles), x (angular velocity in the frd board frame x-axis in rad/s), y (angular velocity in the frd board frame y-axis in rad/s), and 5 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "",
        "units": null,
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "x": {
        "type": "float32",
        "name": "x",
        "description": "angular velocity in the FRD board frame X-axis in rad/s",
        "units": null,
        "default_value": null
      },
      "y": {
        "type": "float32",
        "name": "y",
        "description": "angular velocity in the FRD board frame Y-axis in rad/s",
        "units": null,
        "default_value": null
      },
      "z": {
        "type": "float32",
        "name": "z",
        "description": "angular velocity in the FRD board frame Z-axis in rad/s",
        "units": null,
        "default_value": null
      },
      "temperature": {
        "type": "float32",
        "name": "temperature",
        "description": "temperature in degrees Celsius",
        "units": null,
        "default_value": null
      },
      "error_count": {
        "type": "uint32",
        "name": "error_count",
        "description": "",
        "units": null,
        "default_value": null
      },
      "clip_counter": {
        "type": "uint8[3]",
        "name": "clip_counter",
        "description": "clip count per axis in the sample period",
        "units": null,
        "default_value": null
      },
      "samples": {
        "type": "uint8",
        "name": "samples",
        "description": "number of raw samples that went into this message",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_matlab_csv_serial",
        "name": "matlab_csv_serial",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_gyro_calibration",
        "name": "gyro_calibration",
        "type": "Module"
      },
      {
        "id": "m_gyro_fft",
        "name": "gyro_fft",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      },
      {
        "id": "m_temperature_compensation",
        "name": "temperature_compensation",
        "type": "Module"
      },
      {
        "id": "m_microbench",
        "name": "microbench",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_global_position_groundtruth": {
    "name": "vehicle_global_position_groundtruth",
    "description": "Contains simulation or motion capture ground truth data for state estimation validation.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "lat": {
        "type": "double",
        "name": "lat",
        "description": "Latitude in degrees",
        "units": "deg"
      },
      "lon": {
        "type": "double",
        "name": "lon",
        "description": "Longitude in degrees",
        "units": "deg"
      },
      "alt": {
        "type": "float",
        "name": "alt",
        "description": "Altitude AMSL in meters",
        "units": "m"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_sih",
        "name": "simulator_sih",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_sensor_agp_sim",
        "name": "sensor_agp_sim",
        "type": "Module"
      },
      {
        "id": "m_sensor_airspeed_sim",
        "name": "sensor_airspeed_sim",
        "type": "Module"
      },
      {
        "id": "m_sensor_baro_sim",
        "name": "sensor_baro_sim",
        "type": "Module"
      },
      {
        "id": "m_sensor_gps_sim",
        "name": "sensor_gps_sim",
        "type": "Module"
      },
      {
        "id": "m_sensor_mag_sim",
        "name": "sensor_mag_sim",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_accel": {
    "name": "sensor_accel",
    "description": "Contains sensor accel data including device_id (unique device id for the sensor that does not change between power cycles), x (acceleration in the frd board frame x-axis in m/s^2), y (acceleration in the frd board frame y-axis in m/s^2), and 5 other fields.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "",
        "units": null,
        "default_value": null
      },
      "device_id": {
        "type": "uint32",
        "name": "device_id",
        "description": "unique device ID for the sensor that does not change between power cycles",
        "units": null,
        "default_value": null
      },
      "x": {
        "type": "float32",
        "name": "x",
        "description": "acceleration in the FRD board frame X-axis in m/s^2",
        "units": null,
        "default_value": null
      },
      "y": {
        "type": "float32",
        "name": "y",
        "description": "acceleration in the FRD board frame Y-axis in m/s^2",
        "units": null,
        "default_value": null
      },
      "z": {
        "type": "float32",
        "name": "z",
        "description": "acceleration in the FRD board frame Z-axis in m/s^2",
        "units": null,
        "default_value": null
      },
      "temperature": {
        "type": "float32",
        "name": "temperature",
        "description": "temperature in degrees Celsius",
        "units": null,
        "default_value": null
      },
      "error_count": {
        "type": "uint32",
        "name": "error_count",
        "description": "",
        "units": null,
        "default_value": null
      },
      "clip_counter": {
        "type": "uint8[3]",
        "name": "clip_counter",
        "description": "clip count per axis in the sample period",
        "units": null,
        "default_value": null
      },
      "samples": {
        "type": "uint8",
        "name": "samples",
        "description": "number of raw samples that went into this message",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_heater",
        "name": "heater",
        "type": "Module"
      },
      {
        "id": "m_matlab_csv_serial",
        "name": "matlab_csv_serial",
        "type": "Module"
      },
      {
        "id": "m_work_item_example",
        "name": "work_item_example",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      },
      {
        "id": "m_gyro_calibration",
        "name": "gyro_calibration",
        "type": "Module"
      },
      {
        "id": "m_sensors",
        "name": "sensors",
        "type": "Module"
      },
      {
        "id": "m_temperature_compensation",
        "name": "temperature_compensation",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vehicle_angular_velocity_groundtruth": {
    "name": "vehicle_angular_velocity_groundtruth",
    "description": "Contains simulation or motion capture ground truth data for state estimation validation.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "vx": {
        "type": "float",
        "name": "vx",
        "description": "Velocity in North direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "vy": {
        "type": "float",
        "name": "vy",
        "description": "Velocity in East direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "vz": {
        "type": "float",
        "name": "vz",
        "description": "Velocity in Down direction in NED earth-fixed frame",
        "units": "m/s"
      },
      "xyz": {
        "type": "float32[3]",
        "name": "xyz",
        "description": "Angular velocity about X, Y, Z body axes in rad/s",
        "units": "rad/s"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_gz_bridge",
        "name": "gz_bridge",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_sih",
        "name": "simulator_sih",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_actuator_outputs_sim": {
    "name": "actuator_outputs_sim",
    "description": "Contains direct actuator commands (motors, servos).",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "control": {
        "type": "float32[]",
        "name": "control",
        "description": "Actuator control outputs",
        "units": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_pwm_out_sim",
        "name": "pwm_out_sim",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_sih",
        "name": "simulator_sih",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_aux_global_position": {
    "name": "aux_global_position",
    "description": "Contains aux global position information for the vehicle.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      },
      "timestamp_sample": {
        "type": "uint64",
        "name": "timestamp_sample",
        "description": "time of data sample that this message refers to",
        "units": "microseconds"
      },
      "lat": {
        "type": "double",
        "name": "lat",
        "description": "Latitude in degrees",
        "units": "deg"
      },
      "lon": {
        "type": "double",
        "name": "lon",
        "description": "Longitude in degrees",
        "units": "deg"
      },
      "alt": {
        "type": "float",
        "name": "alt",
        "description": "Altitude AMSL in meters",
        "units": "m"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_sensor_agp_sim",
        "name": "sensor_agp_sim",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_ekf2",
        "name": "ekf2",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_sensor_correction": {
    "name": "sensor_correction",
    "description": "\nSensor corrections in SI-unit form for the voted sensor\n\nCorrections for acceleromter acceleration outputs where corrected_accel = raw_accel * accel_scale + accel_offset\nNote the corrections are in the sensor frame and must be applied before the sensor data is rotated into body frame\nCorrections for gyro angular rate outputs where corrected_rate = raw_rate * gyro_scale + gyro_offset\nNote the corrections are in the sensor frame and must be applied before the sensor data is rotated into body frame\nCorrections for magnetometer measurement outputs where corrected_mag = raw_mag * mag_scale + mag_offset\nNote the corrections are in the sensor frame and must be applied before the sensor data is rotated into body frame\nCorrections for barometric pressure outputs where corrected_pressure = raw_pressure * pressure_scale + pressure_offset\nNote the corrections are in the sensor frame and must be applied before the sensor data is rotated into body frame",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "accel_device_ids": {
        "type": "uint32[4]",
        "name": "accel_device_ids",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_temperature": {
        "type": "float32[4]",
        "name": "accel_temperature",
        "description": "",
        "units": null,
        "default_value": null
      },
      "accel_offset_0": {
        "type": "float32[3]",
        "name": "accel_offset_0",
        "description": "accelerometer 0 offsets in the FRD board frame XYZ-axis in m/s^s",
        "units": null,
        "default_value": null
      },
      "accel_offset_1": {
        "type": "float32[3]",
        "name": "accel_offset_1",
        "description": "accelerometer 1 offsets in the FRD board frame XYZ-axis in m/s^s",
        "units": null,
        "default_value": null
      },
      "accel_offset_2": {
        "type": "float32[3]",
        "name": "accel_offset_2",
        "description": "accelerometer 2 offsets in the FRD board frame XYZ-axis in m/s^s",
        "units": null,
        "default_value": null
      },
      "accel_offset_3": {
        "type": "float32[3]",
        "name": "accel_offset_3",
        "description": "accelerometer 3 offsets in the FRD board frame XYZ-axis in m/s^s",
        "units": null,
        "default_value": null
      },
      "gyro_device_ids": {
        "type": "uint32[4]",
        "name": "gyro_device_ids",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_temperature": {
        "type": "float32[4]",
        "name": "gyro_temperature",
        "description": "",
        "units": null,
        "default_value": null
      },
      "gyro_offset_0": {
        "type": "float32[3]",
        "name": "gyro_offset_0",
        "description": "gyro 0 XYZ offsets in the sensor frame in rad/s",
        "units": null,
        "default_value": null
      },
      "gyro_offset_1": {
        "type": "float32[3]",
        "name": "gyro_offset_1",
        "description": "gyro 1 XYZ offsets in the sensor frame in rad/s",
        "units": null,
        "default_value": null
      },
      "gyro_offset_2": {
        "type": "float32[3]",
        "name": "gyro_offset_2",
        "description": "gyro 2 XYZ offsets in the sensor frame in rad/s",
        "units": null,
        "default_value": null
      },
      "gyro_offset_3": {
        "type": "float32[3]",
        "name": "gyro_offset_3",
        "description": "gyro 3 XYZ offsets in the sensor frame in rad/s",
        "units": null,
        "default_value": null
      },
      "mag_device_ids": {
        "type": "uint32[4]",
        "name": "mag_device_ids",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_temperature": {
        "type": "float32[4]",
        "name": "mag_temperature",
        "description": "",
        "units": null,
        "default_value": null
      },
      "mag_offset_0": {
        "type": "float32[3]",
        "name": "mag_offset_0",
        "description": "magnetometer 0 offsets in the FRD board frame XYZ-axis in m/s^s",
        "units": null,
        "default_value": null
      },
      "mag_offset_1": {
        "type": "float32[3]",
        "name": "mag_offset_1",
        "description": "magnetometer 1 offsets in the FRD board frame XYZ-axis in m/s^s",
        "units": null,
        "default_value": null
      },
      "mag_offset_2": {
        "type": "float32[3]",
        "name": "mag_offset_2",
        "description": "magnetometer 2 offsets in the FRD board frame XYZ-axis in m/s^s",
        "units": null,
        "default_value": null
      },
      "mag_offset_3": {
        "type": "float32[3]",
        "name": "mag_offset_3",
        "description": "magnetometer 3 offsets in the FRD board frame XYZ-axis in m/s^s",
        "units": null,
        "default_value": null
      },
      "baro_device_ids": {
        "type": "uint32[4]",
        "name": "baro_device_ids",
        "description": "",
        "units": null,
        "default_value": null
      },
      "baro_temperature": {
        "type": "float32[4]",
        "name": "baro_temperature",
        "description": "",
        "units": null,
        "default_value": null
      },
      "baro_offset_0": {
        "type": "float32",
        "name": "baro_offset_0",
        "description": "barometric pressure 0 offsets in the sensor frame in Pascals",
        "units": null,
        "default_value": null
      },
      "baro_offset_1": {
        "type": "float32",
        "name": "baro_offset_1",
        "description": "barometric pressure 1 offsets in the sensor frame in Pascals",
        "units": null,
        "default_value": null
      },
      "baro_offset_2": {
        "type": "float32",
        "name": "baro_offset_2",
        "description": "barometric pressure 2 offsets in the sensor frame in Pascals",
        "units": null,
        "default_value": null
      },
      "baro_offset_3": {
        "type": "float32",
        "name": "baro_offset_3",
        "description": "barometric pressure 3 offsets in the sensor frame in Pascals",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_temperature_compensation",
        "name": "temperature_compensation",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_vtol_vehicle_status": {
    "name": "vtol_vehicle_status",
    "description": "Contains status information about the system or component.",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds"
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_vtol_att_control",
        "name": "vtol_att_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_airspeed_selector",
        "name": "airspeed_selector",
        "type": "Module"
      },
      {
        "id": "m_commander",
        "name": "commander",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  },
  "t_actuator_outputs": {
    "name": "actuator_outputs",
    "description": "actuator_outputs_sim is used for SITL, HITL & SIH (with an output range of [-1, 1])\nTOPICS actuator_outputs actuator_outputs_sim actuator_outputs_debug",
    "fields": {
      "timestamp": {
        "type": "uint64",
        "name": "timestamp",
        "description": "time since system start",
        "units": "microseconds",
        "default_value": null
      },
      "noutputs": {
        "type": "uint32",
        "name": "noutputs",
        "description": "valid outputs",
        "units": null,
        "default_value": null
      },
      "output": {
        "type": "float32[16]",
        "name": "output",
        "description": "output data, in natural output units",
        "units": null,
        "default_value": null
      }
    },
    "type": "Dynamic",
    "publishers": [
      {
        "id": "m_io_bypass_control",
        "name": "io_bypass_control",
        "type": "Module"
      }
    ],
    "subscribers": [
      {
        "id": "m_mavlink",
        "name": "mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_mavlink",
        "name": "simulator_mavlink",
        "type": "Module"
      },
      {
        "id": "m_simulator_sih",
        "name": "simulator_sih",
        "type": "Module"
      },
      {
        "id": "m_io_bypass_control",
        "name": "io_bypass_control",
        "type": "Module"
      }
    ],
    "bidirectional": [],
    "color": "#6c41d8"
  }
}